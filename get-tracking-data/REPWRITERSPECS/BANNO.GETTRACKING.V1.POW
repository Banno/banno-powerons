[*
**  PowerOn Name:       BANNO.GETTRACKING.V1.POW
**
**  Copyright 2021 Jack Henry and Associates
**
**  03/08/2021 JuCarson        Original Author
**  12/05/2022 RRobison        Refactor of code
**
**  This Banno PowerOn returns all data found in any given
**  account level tracking record.
**
**  Banno is not responsible for any modifications to this file
**  made by unauthorized personnel.
**
**  DO NOT MODIFY THIS FILE UNLESS YOU KNOW WHAT YOU'RE DOING!
*]

[*  Details:
**     Client application(Banno/SSO) calls this PowerOn with 
**     the following data:
**
**     RGSTATE      REQUIRED  GETTRACKINGINFO
**     RGUSERCHR1   REQUIRED  10 Digit Member Account Number
**     RGUSERCHR2   REQUIRED  Tracking Type list ("2-15,18,25-68,72-9999", "ALL")
**
**   RETURNS:
**     Any Field with data for example (01 shown, 01-20 possible):
**     USERAMOUNT01 : Data contained in TRACKING:USERAMOUNT1
**     USERCHAR01   : Data contained in TRACKING:USERCHAR1
**     USERCODE01   : Data contained in TRACKING:USERCODE1
**     USERDATE01   : Data contained in TRACKING:USERDATE1
**     USERNUMBER01 : Data contained in TRACKING:USERNUMBER1
**     USERRATE01   : Data contained in TRACKING:USERRATE1
**
]

SYMCONNECT

TARGET=ACCOUNT

DEFINE
 #INCLUDE "RB.LISTEXPAND.DEF"
 
 Q                     = CHARACTER
 TMPCHR                = CHARACTER
 ACCTNUMBER            = CHARACTER(10)
 TRACKINGFOUND         = NUMBER
 ACCTFOUND             = NUMBER
 FIRSTRUN              = NUMBER

 LABEL                 = CHARACTER ARRAY(120)
 CHARDATA              = CHARACTER ARRAY(120)
 FIELDMAX              = 120
 FIELDCOUNT            = NUMBER
 FIELDINDEX            = NUMBER

 ERRORCODE             = NUMBER
 VALIDNUMBER           = NUMBER
 VALIDLIST             = NUMBER
 CHECKINDEX            = NUMBER
 ERRORTEXT             = CHARACTER ARRAY(3)

 TRKLABELINDEX         = NUMBER
 TRKLABELBASE          = CHARACTER
 TRKDATATYPE           = NUMBER
 TRKVALUE              = CHARACTER
 TRKDATAAMOUNT         = MONEY
 TRKDATACHARACTER      = CHARACTER
 TRKDATACODE           = NUMBER
 TRKDATADATE           = DATE
 TRKDATANUMBER         = NUMBER
 TRKDATARATE           = RATE

 ERRORINVACCTTRK       = 1
 ERRORINVACCTNUM       = 2
 ERRORINVTRKING        = 3

 TRKDATATYPEAMOUNT     = 1
 TRKDATATYPECHARACTER  = 2
 TRKDATATYPECODE       = 3
 TRKDATATYPEDATE       = 4
 TRKDATATYPENUMBER     = 5
 TRKDATATYPERATE       = 6

 TRUE                  = 1
 FALSE                 = 0
 DATENULL              = '--/--/--'

 STATEGETTRACKINGINFO  = "GETTRACKINGINFO"
END

SETUP
 Q=CTRLCHR(34)
 ERRORTEXT(ERRORINVACCTTRK)="cannot find account or tracking"
 ERRORTEXT(ERRORINVACCTNUM)="invalid account number received"
 ERRORTEXT(ERRORINVTRKING)="invalid tracking type received"
END

PRINT TITLE="BANNO.GETTRACKING.V1.POW"

 IF @RGSTATE=STATEGETTRACKINGINFO THEN
  DO
   ERRORCODE=0
   CALL VALIDATEINPUTVARS
   IF ERRORCODE=0 THEN
    DO
     ACCTFOUND=FALSE
     FIRSTRUN=TRUE
     FOR ACCOUNT ACCTNUMBER
      DO
       ACCTFOUND=TRUE
       TRACKINGFOUND=FALSE
       FOR EACH TRACKING WITH (LELIST(TRACKING:TYPE)=TRUE AND
                              (TRACKING:EXPIREDATE='--/--/--' OR
                               TRACKING:EXPIREDATE>SYSTEMDATE))
        DO
         FIELDCOUNT=0
         TRACKINGFOUND=TRUE
         IF FIRSTRUN=FALSE THEN
          PRINT ","
         CALL GETTRACKINGDATA
         CALL JSONHEADER
         CALL JSONTRACKING
         FIRSTRUN=FALSE
        END
      END
     IF ACCTFOUND=FALSE OR 
        TRACKINGFOUND=FALSE THEN
      DO
       ERRORCODE=ERRORINVACCTTRK
       CALL JSONERROR
      END
     ELSE 
      CALL JSONFOOTER 
    END
  END
END

PROCEDURE JSONERROR
[* Procedure reports error if tracking or account 
** is not found.
*]
 PRINT "{"
 NEWLINE
 PRINT Q+"results"+Q+": {"
 NEWLINE
 PRINT Q+"errorCode"+Q+": "+Q
 PRINT ERRORCODE+500
 PRINT Q+","
 NEWLINE
 PRINT Q+"ErrorMessage"+Q+": "+Q+ERRORTEXT(ERRORCODE)+Q
 NEWLINE
 PRINT "}"
 NEWLINE
 PRINT "}"
 NEWLINE
END

PROCEDURE JSONHEADER
[* Procedure prints tracking locator and misc
** JSON syntax.
*]
 IF FIRSTRUN=TRUE THEN
  DO
   PRINT "{"
   NEWLINE
   PRINT Q+"results"+Q+": ["
   NEWLINE
  END
 PRINT "{"
 NEWLINE
 PRINT Q+"LOCATORNUM"+Q+": "+Q
 PRINT TRACKING:LOCATOR
 PRINT Q+","
 NEWLINE
 PRINT Q+"TRACKINGTYPE"+Q+": "+Q
 PRINT TRACKING:TYPE
 PRINT Q+","
 NEWLINE
END [Procedure Print JSON Header]

PROCEDURE JSONFOOTER
[* Procedure prints and misc ending JSON syntax.
*]
 PRINT "]"
 NEWLINE
 PRINT "}"
 NEWLINE
END [Procedure Print JSON Footer]

PROCEDURE JSONTRACKING
[* Procedure prints tracking fields in JSON syntax.
*]
 IF FIELDCOUNT=0 THEN
  DO
   FIELDCOUNT=1
   LABEL(FIELDCOUNT)="NODATA"
   CHARDATA(FIELDCOUNT)="NODATA"
  END
 FOR FIELDINDEX=1 TO FIELDCOUNT
  DO
   PRINT Q+LABEL(FIELDINDEX)+Q+": "+Q+CHARDATA(FIELDINDEX)+Q
   IF FIELDINDEX<FIELDCOUNT THEN
    PRINT ","
   NEWLINE
  END
 PRINT "}"
END [Procedure Print Tracking JSON]

PROCEDURE GETTRACKINGDATA
[* Procedure calls procedures to gather tracking
** data.
*]
 CALL GETAMOUNTDATA
 CALL GETCHARACTERDATA
 CALL GETCODEDATA
 CALL GETDATEDATA
 CALL GETNUMBERDATA
 CALL GETRATEDATA
END [Procedure Get Tracking Data]

PROCEDURE ADDTRKDATA
[* Procedure adds to the tracking data array
*]
 FIELDCOUNT=FIELDCOUNT+1
 LABEL(FIELDCOUNT)=TRKLABELBASE+FORMAT("99",TRKLABELINDEX)
 IF TRKDATATYPE=TRKDATATYPEAMOUNT THEN 
  DO
   TMPCHR=FORMAT("#############9.99",TRKDATAAMOUNT)
   CALL NLS
   TRKVALUE=TMPCHR
  END
 ELSE IF TRKDATATYPE=TRKDATATYPECHARACTER THEN
  TRKVALUE=TRKDATACHARACTER
 ELSE IF TRKDATATYPE=TRKDATATYPECODE THEN
  DO
   TMPCHR=FORMAT("############9",TRKDATACODE)
   CALL NLS
   TRKVALUE=TMPCHR
  END
 ELSE IF TRKDATATYPE=TRKDATATYPEDATE THEN
  DO
   TMPCHR=FORMAT("99/99/9999",TRKDATADATE)
   TRKVALUE=TMPCHR
  END
 ELSE IF TRKDATATYPE=TRKDATATYPENUMBER THEN
  DO
   TMPCHR=FORMAT("############9",TRKDATANUMBER)
   CALL NLS
   TRKVALUE=TMPCHR
  END
 ELSE IF TRKDATATYPE=TRKDATATYPERATE THEN
  DO
   TMPCHR=FORMAT("##9.999",TRKDATARATE)
   CALL NLS
   TRKVALUE=TMPCHR
  END
 CHARDATA(FIELDCOUNT)=TRKVALUE
END [Procedure Add Tracking Data]

PROCEDURE GETAMOUNTDATA
[* Procedure reads through all tracking amount fields
** and adds any containing data to Array for printing
** to JSON specs.
*]
 TRKLABELBASE="USERAMOUNT"
 TRKDATATYPE=TRKDATATYPEAMOUNT
 IF TRACKING:USERAMOUNT1<>$0.00 THEN 
  DO
   TRKLABELINDEX=1
   TRKDATAAMOUNT=TRACKING:USERAMOUNT1
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT2<>$0.00 THEN 
  DO
   TRKLABELINDEX=2
   TRKDATAAMOUNT=TRACKING:USERAMOUNT2
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT3<>$0.00 THEN 
  DO
   TRKLABELINDEX=3
   TRKDATAAMOUNT=TRACKING:USERAMOUNT3
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT4<>$0.00 THEN 
  DO
   TRKLABELINDEX=4
   TRKDATAAMOUNT=TRACKING:USERAMOUNT4
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT5<>$0.00 THEN 
  DO
   TRKLABELINDEX=5
   TRKDATAAMOUNT=TRACKING:USERAMOUNT5
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT6<>$0.00 THEN 
  DO
   TRKLABELINDEX=6
   TRKDATAAMOUNT=TRACKING:USERAMOUNT6
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT7<>$0.00 THEN 
  DO
   TRKLABELINDEX=7
   TRKDATAAMOUNT=TRACKING:USERAMOUNT7
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT8<>$0.00 THEN 
 DO
   TRKLABELINDEX=8
   TRKDATAAMOUNT=TRACKING:USERAMOUNT8
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT9<>$0.00 THEN 
  DO
   TRKLABELINDEX=9
   TRKDATAAMOUNT=TRACKING:USERAMOUNT9
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT10<>$0.00 THEN 
  DO
   TRKLABELINDEX=10
   TRKDATAAMOUNT=TRACKING:USERAMOUNT10
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT11<>$0.00 THEN 
  DO
   TRKLABELINDEX=11
   TRKDATAAMOUNT=TRACKING:USERAMOUNT11
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT12<>$0.00 THEN 
  DO
   TRKLABELINDEX=12
   TRKDATAAMOUNT=TRACKING:USERAMOUNT12
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT13<>$0.00 THEN 
  DO
   TRKLABELINDEX=13
   TRKDATAAMOUNT=TRACKING:USERAMOUNT13
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT14<>$0.00 THEN 
  DO
   TRKLABELINDEX=14
   TRKDATAAMOUNT=TRACKING:USERAMOUNT14
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT15<>$0.00 THEN 
  DO
   TRKLABELINDEX=15
   TRKDATAAMOUNT=TRACKING:USERAMOUNT15
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT16<>$0.00 THEN 
  DO
   TRKLABELINDEX=16
   TRKDATAAMOUNT=TRACKING:USERAMOUNT16
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT17<>$0.00 THEN 
  DO
   TRKLABELINDEX=17
   TRKDATAAMOUNT=TRACKING:USERAMOUNT17
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT18<>$0.00 THEN 
  DO
   TRKLABELINDEX=18
   TRKDATAAMOUNT=TRACKING:USERAMOUNT18
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT19<>$0.00 THEN 
  DO
   TRKLABELINDEX=19
   TRKDATAAMOUNT=TRACKING:USERAMOUNT19
   CALL ADDTRKDATA
  END
 IF TRACKING:USERAMOUNT20<>$0.00 THEN 
  DO
   TRKLABELINDEX=20
   TRKDATAAMOUNT=TRACKING:USERAMOUNT20
   CALL ADDTRKDATA
  END
END [Procedure Get Amount Data]

PROCEDURE GETCHARACTERDATA
[* Procedure reads through all tracking character fields
** and adds any containing data to Array for printing
** to JSON specs.
*]
 TRKLABELBASE="USERCHAR"
 TRKDATATYPE=TRKDATATYPECHARACTER
 IF TRACKING:USERCHAR1<>"" THEN 
  DO
   TRKLABELINDEX=1
   TRKDATACHARACTER=TRACKING:USERCHAR1
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR2<>"" THEN 
  DO
   TRKLABELINDEX=2
   TRKDATACHARACTER=TRACKING:USERCHAR2
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR3<>"" THEN 
  DO
   TRKLABELINDEX=3
   TRKDATACHARACTER=TRACKING:USERCHAR3
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR4<>"" THEN 
  DO
   TRKLABELINDEX=4
   TRKDATACHARACTER=TRACKING:USERCHAR4
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR5<>"" THEN 
  DO
   TRKLABELINDEX=5
   TRKDATACHARACTER=TRACKING:USERCHAR5
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR6<>"" THEN 
  DO
   TRKLABELINDEX=6
   TRKDATACHARACTER=TRACKING:USERCHAR6
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR7<>"" THEN 
  DO
   TRKLABELINDEX=7
   TRKDATACHARACTER=TRACKING:USERCHAR7
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR8<>"" THEN 
  DO
   TRKLABELINDEX=8
   TRKDATACHARACTER=TRACKING:USERCHAR8
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR9<>"" THEN 
  DO
   TRKLABELINDEX=9
   TRKDATACHARACTER=TRACKING:USERCHAR9
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR10<>"" THEN 
  DO
   TRKLABELINDEX=10
   TRKDATACHARACTER=TRACKING:USERCHAR10
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR11<>"" THEN 
  DO
   TRKLABELINDEX=11
   TRKDATACHARACTER=TRACKING:USERCHAR11
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR12<>"" THEN 
  DO
   TRKLABELINDEX=12
   TRKDATACHARACTER=TRACKING:USERCHAR12
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR13<>"" THEN 
  DO
   TRKLABELINDEX=13
   TRKDATACHARACTER=TRACKING:USERCHAR13
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR14<>"" THEN 
  DO
   TRKLABELINDEX=14
   TRKDATACHARACTER=TRACKING:USERCHAR14
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR15<>"" THEN 
  DO
   TRKLABELINDEX=15
   TRKDATACHARACTER=TRACKING:USERCHAR15
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR16<>"" THEN 
  DO
   TRKLABELINDEX=16
   TRKDATACHARACTER=TRACKING:USERCHAR16
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR17<>"" THEN 
  DO
   TRKLABELINDEX=17
   TRKDATACHARACTER=TRACKING:USERCHAR17
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR18<>"" THEN 
  DO
   TRKLABELINDEX=18
   TRKDATACHARACTER=TRACKING:USERCHAR18
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR19<>"" THEN 
  DO
   TRKLABELINDEX=19
   TRKDATACHARACTER=TRACKING:USERCHAR19
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCHAR20<>"" THEN 
  DO
   TRKLABELINDEX=20
   TRKDATACHARACTER=TRACKING:USERCHAR20
   CALL ADDTRKDATA
  END
END [Procedure Get Character Data]

PROCEDURE GETCODEDATA
[* Procedure reads through all tracking code fields
** and adds any containing data to Array for printing
** to JSON specs.
*]
 TRKLABELBASE="USERCODE"
 TRKDATATYPE=TRKDATATYPECODE
 IF TRACKING:USERCODE1<>0 THEN 
  DO
   TRKLABELINDEX=1 
   TRKDATACODE=TRACKING:USERCODE1
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE2<>0 THEN 
  DO
   TRKLABELINDEX=2
   TRKDATACODE=TRACKING:USERCODE2
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE3<>0 THEN 
  DO
   TRKLABELINDEX=3
   TRKDATACODE=TRACKING:USERCODE3
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE4<>0 THEN 
  DO
   TRKLABELINDEX=4
   TRKDATACODE=TRACKING:USERCODE4
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE5<>0 THEN 
  DO
   TRKLABELINDEX=5
   TRKDATACODE=TRACKING:USERCODE5
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE6<>0 THEN 
  DO
   TRKLABELINDEX=6
   TRKDATACODE=TRACKING:USERCODE6
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE7<>0 THEN 
  DO
   TRKLABELINDEX=7
   TRKDATACODE=TRACKING:USERCODE7
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE8<>0 THEN 
  DO
  TRKLABELINDEX=8
   TRKDATACODE=TRACKING:USERCODE8
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE9<>0 THEN 
  DO
   TRKLABELINDEX=9
   TRKDATACODE=TRACKING:USERCODE9
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE10<>0 THEN 
  DO
   TRKLABELINDEX=10
   TRKDATACODE=TRACKING:USERCODE10
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE11<>0 THEN 
  DO
   TRKLABELINDEX=11
   TRKDATACODE=TRACKING:USERCODE11
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE12<>0 THEN 
  DO
   TRKLABELINDEX=12
   TRKDATACODE=TRACKING:USERCODE12
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE13<>0 THEN 
  DO
   TRKLABELINDEX=13
   TRKDATACODE=TRACKING:USERCODE13
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE14<>0 THEN 
  DO
   TRKLABELINDEX=14
   TRKDATACODE=TRACKING:USERCODE14
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE15<>0 THEN 
  DO
   TRKLABELINDEX=15
   TRKDATACODE=TRACKING:USERCODE15
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE16<>0 THEN 
  DO
   TRKLABELINDEX=16
   TRKDATACODE=TRACKING:USERCODE16
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE17<>0 THEN 
  DO
   TRKLABELINDEX=17
   TRKDATACODE=TRACKING:USERCODE17
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE18<>0 THEN 
  DO
  TRKLABELINDEX=18
   TRKDATACODE=TRACKING:USERCODE18
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE19<>0 THEN 
  DO
   TRKLABELINDEX=19
   TRKDATACODE=TRACKING:USERCODE19
   CALL ADDTRKDATA
  END
 IF TRACKING:USERCODE20<>0 THEN 
  DO
   TRKLABELINDEX=20
   TRKDATACODE=TRACKING:USERCODE20
   CALL ADDTRKDATA
  END
END [Procedure Get Amount Data]

PROCEDURE GETDATEDATA
[* Procedure reads through all tracking date fields
** and adds any containing data to Array for printing
** to JSON specs.
*]
 TRKLABELBASE="USERDATE"
 TRKDATATYPE=TRKDATATYPEDATE
 IF TRACKING:USERDATE1<>DATENULL THEN 
  DO
   TRKLABELINDEX=1
   TRKDATADATE=TRACKING:USERDATE1
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE2<>DATENULL THEN 
  DO
   TRKLABELINDEX=2
   TRKDATADATE=TRACKING:USERDATE2
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE3<>DATENULL THEN 
  DO
   TRKLABELINDEX=3
   TRKDATADATE=TRACKING:USERDATE3
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE4<>DATENULL THEN 
  DO
   TRKLABELINDEX=4
   TRKDATADATE=TRACKING:USERDATE4
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE5<>DATENULL THEN 
  DO
   TRKLABELINDEX=5
   TRKDATADATE=TRACKING:USERDATE5
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE6<>DATENULL THEN 
  DO
   TRKLABELINDEX=6
   TRKDATADATE=TRACKING:USERDATE6
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE7<>DATENULL THEN 
  DO
   TRKLABELINDEX=7
   TRKDATADATE=TRACKING:USERDATE7
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE8<>DATENULL THEN 
  DO
   TRKLABELINDEX=8
   TRKDATADATE=TRACKING:USERDATE8
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE9<>DATENULL THEN 
  DO
   TRKLABELINDEX=9
   TRKDATADATE=TRACKING:USERDATE9
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE10<>DATENULL THEN 
  DO
   TRKLABELINDEX=10
   TRKDATADATE=TRACKING:USERDATE10
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE11<>DATENULL THEN 
  DO
   TRKLABELINDEX=11
   TRKDATADATE=TRACKING:USERDATE11
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE12<>DATENULL THEN 
  DO
   TRKLABELINDEX=12
   TRKDATADATE=TRACKING:USERDATE12
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE13<>DATENULL THEN 
  DO
   TRKLABELINDEX=13
   TRKDATADATE=TRACKING:USERDATE13
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE14<>DATENULL THEN 
  DO
   TRKLABELINDEX=14
   TRKDATADATE=TRACKING:USERDATE14
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE15<>DATENULL THEN 
  DO
   TRKLABELINDEX=15
   TRKDATADATE=TRACKING:USERDATE15
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE16<>DATENULL THEN 
  DO
   TRKLABELINDEX=16
   TRKDATADATE=TRACKING:USERDATE16
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE17<>DATENULL THEN 
  DO
   TRKLABELINDEX=17
   TRKDATADATE=TRACKING:USERDATE17
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE18<>DATENULL THEN 
  DO
   TRKLABELINDEX=18
   TRKDATADATE=TRACKING:USERDATE18
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE19<>DATENULL THEN 
  DO
   TRKLABELINDEX=19
   TRKDATADATE=TRACKING:USERDATE19
   CALL ADDTRKDATA
  END
 IF TRACKING:USERDATE20<>DATENULL THEN 
  DO
   TRKLABELINDEX=20
   TRKDATADATE=TRACKING:USERDATE20
   CALL ADDTRKDATA
  END
END [Procedure Get Date Data]

PROCEDURE GETNUMBERDATA
[* Procedure reads through all tracking number fields
** and adds any containing data to Array for printing
** to JSON specs.
*]
 TRKLABELBASE="USERNUMBER"
 TRKDATATYPE=TRKDATATYPENUMBER
 IF TRACKING:USERNUMBER1<>0 THEN 
  DO
   TRKLABELINDEX=1
   TRKDATANUMBER=TRACKING:USERNUMBER1
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER2<>0 THEN 
  DO
   TRKLABELINDEX=2
   TRKDATANUMBER=TRACKING:USERNUMBER2
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER3<>0 THEN 
  DO
   TRKLABELINDEX=3
   TRKDATANUMBER=TRACKING:USERNUMBER3
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER4<>0 THEN 
  DO
   TRKLABELINDEX=4
   TRKDATANUMBER=TRACKING:USERNUMBER4
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER5<>0 THEN 
  DO
   TRKLABELINDEX=5
   TRKDATANUMBER=TRACKING:USERNUMBER5
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER6<>0 THEN 
  DO
   TRKLABELINDEX=6
   TRKDATANUMBER=TRACKING:USERNUMBER6
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER7<>0 THEN 
  DO
   TRKLABELINDEX=7
   TRKDATANUMBER=TRACKING:USERNUMBER7
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER8<>0 THEN 
  DO
   TRKLABELINDEX=8
   TRKDATANUMBER=TRACKING:USERNUMBER8
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER9<>0 THEN 
  DO
   TRKLABELINDEX=9
   TRKDATANUMBER=TRACKING:USERNUMBER9
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER10<>0 THEN 
  DO
   TRKLABELINDEX=10
   TRKDATANUMBER=TRACKING:USERNUMBER10
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER11<>0 THEN 
  DO
   TRKLABELINDEX=11
   TRKDATANUMBER=TRACKING:USERNUMBER11
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER12<>0 THEN 
  DO
   TRKLABELINDEX=12
   TRKDATANUMBER=TRACKING:USERNUMBER12
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER13<>0 THEN 
  DO
   TRKLABELINDEX=13
   TRKDATANUMBER=TRACKING:USERNUMBER13
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER14<>0 THEN 
  DO
   TRKLABELINDEX=14
   TRKDATANUMBER=TRACKING:USERNUMBER14
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER15<>0 THEN 
  DO
   TRKLABELINDEX=15
   TRKDATANUMBER=TRACKING:USERNUMBER15
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER16<>0 THEN 
  DO
   TRKLABELINDEX=16
   TRKDATANUMBER=TRACKING:USERNUMBER16
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER17<>0 THEN 
  DO
   TRKLABELINDEX=17
   TRKDATANUMBER=TRACKING:USERNUMBER17
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER18<>0 THEN 
  DO
   TRKLABELINDEX=18
   TRKDATANUMBER=TRACKING:USERNUMBER18
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER19<>0 THEN 
  DO
   TRKLABELINDEX=19
   TRKDATANUMBER=TRACKING:USERNUMBER19
   CALL ADDTRKDATA
  END
 IF TRACKING:USERNUMBER20<>0 THEN 
  DO
   TRKLABELINDEX=20
   TRKDATANUMBER=TRACKING:USERNUMBER20
   CALL ADDTRKDATA
  END
END [Procedure Get Number Data]

PROCEDURE GETRATEDATA
[* Procedure reads through all tracking rate fields
** and adds any containing data to Array for printing
** to JSON specs.
*]
 TRKLABELBASE="USERRATE"
 TRKDATATYPE=TRKDATATYPERATE
 IF TRACKING:USERRATE1<>0.000 THEN 
  DO
   TRKLABELINDEX=1
   TRKDATARATE=TRACKING:USERRATE1
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE2<>0.000 THEN 
  DO
   TRKLABELINDEX=2
   TRKDATARATE=TRACKING:USERRATE2
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE3<>0.000 THEN 
  DO
   TRKLABELINDEX=3
   TRKDATARATE=TRACKING:USERRATE3
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE4<>0.000 THEN 
  DO
   TRKLABELINDEX=4
   TRKDATARATE=TRACKING:USERRATE4
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE5<>0.000 THEN 
  DO
   TRKLABELINDEX=5
   TRKDATARATE=TRACKING:USERRATE5
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE6<>0.000 THEN 
  DO
   TRKLABELINDEX=6
   TRKDATARATE=TRACKING:USERRATE6
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE7<>0.000 THEN 
  DO
   TRKLABELINDEX=7
   TRKDATARATE=TRACKING:USERRATE7
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE8<>0.000 THEN 
  DO
   TRKLABELINDEX=8
   TRKDATARATE=TRACKING:USERRATE8
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE9<>0.000 THEN 
  DO
   TRKLABELINDEX=9
   TRKDATARATE=TRACKING:USERRATE9
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE10<>0.000 THEN 
  DO
   TRKLABELINDEX=10
   TRKDATARATE=TRACKING:USERRATE10
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE11<>0.000 THEN 
  DO
   TRKLABELINDEX=11
   TRKDATARATE=TRACKING:USERRATE11
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE12<>0.000 THEN 
  DO
   TRKLABELINDEX=12
   TRKDATARATE=TRACKING:USERRATE12
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE13<>0.000 THEN 
  DO
   TRKLABELINDEX=13
   TRKDATARATE=TRACKING:USERRATE13
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE14<>0.000 THEN 
  DO
   TRKLABELINDEX=14
   TRKDATARATE=TRACKING:USERRATE14
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE15<>0.000 THEN 
  DO
   TRKLABELINDEX=15
   TRKDATARATE=TRACKING:USERRATE15
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE16<>0.000 THEN 
  DO
   TRKLABELINDEX=16
   TRKDATARATE=TRACKING:USERRATE16
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE17<>0.000 THEN 
  DO
   TRKLABELINDEX=17
   TRKDATARATE=TRACKING:USERRATE17
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE18<>0.000 THEN 
  DO
   TRKLABELINDEX=18
   TRKDATARATE=TRACKING:USERRATE18
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE19<>0.000 THEN 
  DO
   TRKLABELINDEX=19
   TRKDATARATE=TRACKING:USERRATE19
   CALL ADDTRKDATA
  END
 IF TRACKING:USERRATE20<>0.000 THEN 
  DO
   TRKLABELINDEX=20
   TRKDATARATE=TRACKING:USERRATE20
   CALL ADDTRKDATA
  END
END [Procedure Get Rate Data]

PROCEDURE NLS
[* Remove leading spaces
**  PASS       TMPCHR
**  RETURN     TMPCHR
*]
 WHILE LENGTH(TMPCHR)>0 AND SEGMENT(TMPCHR,1,1)=" "
  DO
   TMPCHR=SEGMENT(TMPCHR,2,LENGTH(TMPCHR))
  END
END [Procedure NLS]

PROCEDURE VALIDATEINPUTVARS
[* Procedure tests @RG variables then sets them
** to local variables if valid.
*]
 TMPCHR=@RGUSERCHR1
 CALL CHECKFORNUMBERONLY
 IF LENGTH(@RGUSERCHR1)>0 AND 
    LENGTH(@RGUSERCHR1)<=10 AND
    VALIDNUMBER=TRUE THEN
  ACCTNUMBER=REPEATCHR("0",10-LENGTH(@RGUSERCHR1))+@RGUSERCHR1
ELSE  
  DO
   ERRORCODE=ERRORINVACCTNUM
   CALL JSONERROR
  END
  
 IF ERRORCODE=0 THEN
  DO
   TMPCHR=@RGUSERCHR2
   CALL CHECKFORLISTONLY
   IF @RGUSERCHR2="" OR
      UPPERCASE(@RGUSERCHR2)="NONE" OR
      VALIDLIST=FALSE THEN
    DO
     ERRORCODE=ERRORINVTRKING
     CALL JSONERROR
    END
   ELSE
    DO
     LELISTINPUT=@RGUSERCHR2
     CALL LISTEXPAND
    END   
  END
END [Procedure Validate Input Vars]

PROCEDURE CHECKFORNUMBERONLY
[* Procedure checks TMPCHR to ensure only numbers
** are entered.
*]
 VALIDNUMBER=TRUE
 FOR CHECKINDEX=1 TO LENGTH(TMPCHR)
  DO
   IF CHARACTERSEARCH("1234567890",SEGMENT(TMPCHR,CHECKINDEX,CHECKINDEX))=0 THEN
    VALIDNUMBER=FALSE
  END
END [Procedure Check For Number Only]

PROCEDURE CHECKFORLISTONLY
[* Procedure checks TMPCHR to ensure only number, 
** commas OR dashes are entered.
*]
 VALIDLIST=TRUE
 IF UPPERCASE(TMPCHR)<>"ALL" THEN
  DO
   FOR CHECKINDEX=1 TO LENGTH(TMPCHR)
    DO
     IF CHARACTERSEARCH("1234567890,-",SEGMENT(TMPCHR,CHECKINDEX,CHECKINDEX))=0 THEN
      VALIDLIST=FALSE
    END
  END  
END [Procedure Check For list Only]

#INCLUDE "RB.LISTEXPAND"
 