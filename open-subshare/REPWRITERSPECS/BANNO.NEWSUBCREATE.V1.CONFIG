[*
**  PowerOn Name:       BANNO.NEWSUBCREATE.V1.CONFIG
**  Datafile Name:      BANNO.NEWSUBCREATE.V1.CFG
**  Letterfile Name:    BANNO.NEWSUBCREATE.TERMS.00-19 
**
**  Copyright 2020-2022 Jack Henry and Associates
**
**  Ver. 1.0.0  05/18/2020: Initial program creation
**  Ver. 1.0.1  12/17/2020: TKainz
**              Added check for share having a defined dividend type.
**              If undefined, share type is not eligible for selection.
**  Ver. 1.0.2  04/05/2022: TKainz
**              Updated sample text and instructions in
**              BANNO.NEWSUBCREATE.TERMS.xx Letter files to include the
**              ability to use basic HTML commands.**
**  Ver. 1.1.0  10/20/2022: TKainz
**              Corresponding BANNO.NEWSUBCREATE.V1.POW ver: 1.1.0
**              Added new parameter settings:
**               1. Added option to copy existing Share/Loan names to new
**                  Share and to define eligible Share/Loan name types.
**               2. Added option to set program 'Test' mode and list up
**                  to 10 test accounts to be used.
**               3. Added ability to override internal error code messages
**                  with more user friendly error code descriptions.
**              Increased maximum allowable share groups from 10 to 20.
**              Updated default TOC Letter files created by the program
**              Corrected HTML tables layout misalignments.
**              Increased some input field lengths to display more user
**                input values.
**              Updated help file and input data validation (for new
**                options) accordingly.
**
**  This Banno service PowerOn is to be installed for use on
**  demand and is run from the Account Manager workspace to
**  set the configuration options for the Banno
**  BANNO.NEWSUBCREATE.V1.POW program to allow members to
**  create their own sub-accounts
**
**  For more information check
**  https://github.com/Banno/banno-powerons
**
**  Banno is not responsible for any modifications to this file
**  made by unauthorized personnel.
**
**  DO NOT MODIFY THIS FILE UNLESS YOU KNOW WHAT YOU'RE DOING!
*]

WINDOWS

TARGET=ACCOUNT

DEFINE
 #INCLUDE "RD.GETDATA.DEF"

 NTSUBACCTCONFIGDATAFILE= "BANNO.NEWSUBCREATE.V1.CFG"

 SACDONE                = NUMBER
 SACI                   = NUMBER
 SACSHARETYPEGROUP      = NUMBER
 SACFILENUM             = NUMBER
 SACFILEERROR           = CHARACTER
 SACFILEPOS             = NUMBER
 SACLINE                = CHARACTER
 SACLINEPREV            = CHARACTER
 SACEXCLUDEWARNINGLIST  = CHARACTER
 SACEXCLUDEACCTTYPELIST = CHARACTER
 SACFUNDREQUIREFLAG     = CHARACTER
 SACFUNDMINAMT          = CHARACTER
 SACNAMEALLOWFLAG       = CHARACTER
 SACNAMEMAXNEW          = NUMBER
 SACSETFILLINRATESFLAG  = CHARACTER
 SACNAMELEVEL           = NUMBER
 SACNAMETYPESAFE        = CHARACTER
 SACNAMETYPEUNSAFE      = CHARACTER
 SACNAMETRACKING        = NUMBER
 SACDISPLAYRATEFLAG     = CHARACTER
 SACSHARETYPES          = CHARACTER ARRAY(19,99)
 SACSHARETYPEGROUPNAMES = CHARACTER ARRAY(19)
 SACSHARETYPEGROUPSMAX  = 19
 SACSHARETYPESMAX       = 99
 SACNAMECOPYSHAREFLAG   = CHARACTER
 SACNAMECOPYLOANFLAG    = CHARACTER
 SACTESTMODEFLAG        = CHARACTER
 SACTESTMODEACCOUNTLIST = CHARACTER
 SACCUSTAFFEMAILADDRESS = CHARACTER
 SACCUSTAFFEMAILSUBJECT = CHARACTER
 SACERRORCODECHR        = CHARACTER ARRAY(20)
 SACERRORCODEDEFAULTCHR = CHARACTER ARRAY(20)
 SACNAMECOPYSHARETYPES  = CHARACTER
 SACNAMECOPYLOANTYPES   = CHARACTER

 QUOTE                  = CHARACTER(1)
 TEMPCHAR               = CHARACTER
 TEMPLINE               = CHARACTER
 TEMPNUM                = NUMBER
 TEMPNUM2               = NUMBER
 PARSEARRAY             = CHARACTER     ARRAY(999)
 PARSEARRAYMAX          = NUMBER
 I                      = NUMBER
 J                      = NUMBER
 K                      = NUMBER
 FILEERROR              = CHARACTER
 FILENUMBER             = NUMBER
 SHAREMAX               = NUMBER
 SHARETYPES             = CHARACTER(04) ARRAY(249)
 IDLENGTH               = NUMBER
 STATES                 = CHARACTER(05) ARRAY(06)
 TMPCHR                 = CHARACTER
 TMPLOOP                = NUMBER
 COLONPOS               = NUMBER
 IDRANGECHR             = CHARACTER
 MAXSHARESCHR           = CHARACTER
 ALLOWNAMESFLAG         = CHARACTER
 VALIDINPUT             = NUMBER
 VALIDATIONERRORLIST    = CHARACTER ARRAY(9)
 VALIDATIONERRORMAX     = 9
 VALIDATIONERRORCOUNT   = NUMBER
 VALIDATIONERRORCODE    = NUMBER
 VALIDATIONERRORCHR     = CHARACTER ARRAY(9)
 TRUE                   = 1
 FALSE                  = 0
 DEBUGMODE              = NUMBER
  DEBUGMODEON           = 1
  DEBUGMODEOFF          = 0 
 DATAFILETYPE           = CHARACTER
 TOCOPENRESULTS         = NUMBER ARRAY(19)
 TOCFILECREATED         = NUMBER
 GROUPLOOP              = NUMBER
 Q                      = CHARACTER
 MAXERRORCODE           = 12
 TESTERRORCODE          = NUMBER
 CONFIGPROGRAMVER       = CHARACTER
END [DEFINE]

SETUP
[* This configuration program version is used by the PowerOn
** program to guard against version misatch.
** Configuration version must be in the following format:
**   'a.b.c mm/dd/yyyy'
**      a=major ver, b=minor ver, c=patch
*]
 CONFIGPROGRAMVER="1.1.0 10/20/2022"
 
[* Debug mode can be on (DEBUGMODEON) or off (DEBUGMODEOFF).
** When on, program settings are saved in a Letter file and
** when off, a Data file. During normal use, DEBUGMODE
** should be DEBUGMODEOFF.
*]
 DEBUGMODE=DEBUGMODEOFF

[* Default error code descriptions
*]
 SACERRORCODEDEFAULTCHR(0)="System is in Memo Post Mode"
 SACERRORCODEDEFAULTCHR(1)="Config file read error"
 SACERRORCODEDEFAULTCHR(2)="Account warning exists"
 SACERRORCODEDEFAULTCHR(3)="Ineligible account type"
 SACERRORCODEDEFAULTCHR(4)="No eligible shares to be created"
 SACERRORCODEDEFAULTCHR(5)="Error reading ToC for group"
 SACERRORCODEDEFAULTCHR(6)="No Shares with sufficient funds to xfer"
 SACERRORCODEDEFAULTCHR(7)="Error reading passed name info"
 SACERRORCODEDEFAULTCHR(8)="Next ID calculation error"
 SACERRORCODEDEFAULTCHR(9)="Error getting new share rate"
 SACERRORCODEDEFAULTCHR(10)="Could not calculate new maturity date"
 SACERRORCODEDEFAULTCHR(11)="Error creating new share"
 SACERRORCODEDEFAULTCHR(12)="No more shares of this type can be created"
 
 CALL INIT
 VALIDINPUT=FALSE
 WHILE VALIDINPUT=FALSE
  DO
   CALL DISPLAYHTML
   CALL PARSEHTML
   CALL VALIDATEINPUT
  END
 CALL WRITEFILE
 CALL CREATETOCLETTERFILES
END [SETUP]

PRINT TITLE="BANNO.NEWSUBCREATE.V1.CONFIG"
 SUPPRESSNEWLINE
END [PRINT]

PROCEDURE DISPLAYHTML
[* Display the HTML input screen
*]
 HTMLVIEWOPEN(0)

 HTMLVIEWLINE("<head><title>BANNO.NEWSUBCREATE.V1.POW - "+
              "Configuration</title>")
 HTMLVIEWLINE("<script language='JavaScript'><!--")
 HTMLVIEWLINE("  var currentRow=1;")
 HTMLVIEWLINE("  var idRange=0; var specfile=1;")
 HTMLVIEWLINE("  var number=2; var currency=3; var limitedNumber=4; "+
              "var helpText=new Array();")

 HTMLVIEWLINE("helpText[0]='<p><b>Account warnings to exclude:</b><br>'+")
 HTMLVIEWLINE(" 'Enter a list containing only numeric values along with"+
              " commas or dashes. Any account that has '+")
 HTMLVIEWLINE(" 'one of the warning codes in the list will not be"+
              " allowed to open shares using this functionality.</p>'+")

 HTMLVIEWLINE(" '<p><b>Account types to exclude:</b><br>'+")
 HTMLVIEWLINE(" 'Enter a list containing only numeric values along"+
              " with commas or dashes. Any account that is '+")
 HTMLVIEWLINE(" 'one of the account types in the list will not be allowed"+
              " to open shares using this functionality.</p>'+")

 HTMLVIEWLINE(" '<p><b>Require funding:</b><br>'+")
 HTMLVIEWLINE(" 'When checked, the &#34;Do Not Fund&#34; option, normally available"+
              " when opening a share with no minimum balance, will not '+")
 HTMLVIEWLINE(" 'be available - requiring the share to be funded."+
              " </p>'+")

 HTMLVIEWLINE(" '<p><b>Minimum funding amt:</b><br>'+")
 HTMLVIEWLINE(" 'When the <b>Require Funding</b> option is selected this"+
              " value will be used if greater than the new '+")
 HTMLVIEWLINE(" 'share&#39;s regular minimum balance requirement"+
              "  and the new share&#39;s minimum deposit requirement</p>'+")

 HTMLVIEWLINE(" '<p><b>Allow name record addition:</b><br>'+")
 HTMLVIEWLINE(" 'When checked, the &#34;Allow Name Record Addition&#34; option will"+
              " allow the member to add or create new name records under '+")
 HTMLVIEWLINE(" 'the account or the new share. If selected, then you must either '+")
 HTMLVIEWLINE(" 'select at least one existing name type to"+
              " copy and/or one safe or unsafe name type to create.</p>'+")

 HTMLVIEWLINE(" '<p><b>Copying existing names</b><br>'+")
 HTMLVIEWLINE(" 'When &#34;Allow name record addition&#34; is chosen"+
              " you can select whether you&#39;ll '+")
 HTMLVIEWLINE(" 'allow the member to copy any existing Share name or Loan"+
              " name record(s) to the '+")
 HTMLVIEWLINE(" 'new Share being created. Name records copied to the new Share '+")
 HTMLVIEWLINE(" 'will be the same name type as the name record they were"+
              " copied from. For each checked '+")
 HTMLVIEWLINE(" 'name record type (Share, Loan) you must enter at least"+
              " one valid name type. Enter '+")
 HTMLVIEWLINE(" 'name types as comma separated values or ranges; eg. 1,2,5-8,10  </p>'+")

 HTMLVIEWLINE(" '<p><b>Creating new names</b><br>'+") 
 HTMLVIEWLINE(" '<p><b>Name level:</b><br>'+") 
 HTMLVIEWLINE(" 'Determine whether the new name records added/created will '+")
 HTMLVIEWLINE(" 'be created at the account level or under the share level."+
              " This does not apply '+")
 HTMLVIEWLINE(" 'to any name records being copied over (see &#34;Copying"+
              " existing names&#34; above) </p>'+")

 HTMLVIEWLINE(" '<p><b>Number of new names allowed:</b><br>'+")
 HTMLVIEWLINE(" 'This sets the number of new names that a member can"+
              " create at the account level or under the new share. '+")
 HTMLVIEWLINE(" 'Current limit is 2 new name records. Setting this value"+
              " to 0 allows no new name records to be created.</p>'+")

 HTMLVIEWLINE(" '<p><b>Safe name types:</b><br>'+")
 HTMLVIEWLINE(" 'These share type name records will be automatically created"+
              " by the program.</p>'+")

 HTMLVIEWLINE(" '<p><b>Unsafe name types:</b><br>'+")
 HTMLVIEWLINE(" 'These share type name records will be stored in a tracking'+")
 HTMLVIEWLINE(" ' record to be reviewed and manually created. </p>'+")

 HTMLVIEWLINE(" '<p><b>Unsafe name tracking type:</b><br>'+")
 HTMLVIEWLINE(" 'The tracking type which will be used to store unsafe name'+")
 HTMLVIEWLINE(" ' record information for later review. </p>'+")

 HTMLVIEWLINE(" '<p><b>Display rates:</b><br>'+")
 HTMLVIEWLINE(" 'When checked, dividend rates pertaining to the new share'+")
 HTMLVIEWLINE(" ' being created will be displayed to the member. </p>'+")

 HTMLVIEWLINE(" '<p><b>Set share div rate for fill-ins:</b><br>'+")
 HTMLVIEWLINE(" 'This controls whether the SHARE:DIVRATE field will"+
              " be set when creating new shares.</p>'+")

 HTMLVIEWLINE(" '<p><b>Test mode:</b><br>'+")
 HTMLVIEWLINE(" 'When checked, only accounts listed in the &#34;Test"+
              " accounts list&#34; below '+")
 HTMLVIEWLINE(" 'will have access to features in the newest version of the"+
              " BANNO.NEWSUBCREATE.V1.POW program. If test mode is off then all '+")
 HTMLVIEWLINE(" 'users will have access to the new features. This is to facilitate"+
              " testing new functionalities in a production environment. '+")
 HTMLVIEWLINE(" 'Please refer to the header notes in the BANNO.NEWSUBCREATE.V1.POW"+
              " program to see which functions are available '+")
 HTMLVIEWLINE(" 'to test accounts.</p>'+")

 HTMLVIEWLINE(" '<p><b>Test accounts list:</b><br>'+")
 HTMLVIEWLINE(" 'When &#34;Test mode&#34; is checked, only accounts listed"+
              " here will have'+")
 HTMLVIEWLINE(" ' access to features in the newest version of the'+")
 HTMLVIEWLINE(" ' BANNO.NEWSUBCREATE.V1.POW program. Enter test accounts"+
              " as comma delimited values. Use full 10-digit account numbers.</p>'+")

 HTMLVIEWLINE(" '<p><b>CU staff email address and subject:</b><br>'+")
 HTMLVIEWLINE(" 'When filled in, the program will generate an email when'+")
 HTMLVIEWLINE(" ' multiple copy name records exist with the same SSN but'+")
 HTMLVIEWLINE(" ' have different addresses.</p>'+")

 HTMLVIEWLINE(" '<p><b>Error display messages:</b><br>'+")
 HTMLVIEWLINE(" 'You can use this section to override internal program"+
              " error messages with descriptions which are more user '+")
 HTMLVIEWLINE(" 'friendly to your members. Please refer to the"+
              " BANNO.NEWSUBCREATE.V1.POW program information to determine '+")
 HTMLVIEWLINE(" 'possible error conditions. Their default descriptions "+
              " are as follows. '+")
 HTMLVIEWLINE(" 'Leaving a descriptive value blank will cause it to revert to "+
              " its default value </p>'+")
 HTMLVIEWLINE(" '<b>&nbsp;&nbsp;&nbsp;Error&nbsp;&nbsp;&nbsp;</b><b>Default"+
              " Description</b><br>'+")
 FOR TMPLOOP=0 TO MAXERRORCODE
  DO
   TMPCHR=SACERRORCODEDEFAULTCHR(TMPLOOP)
   HTMLVIEWLINE(" '&nbsp;&nbsp;&nbsp;"+FORMAT("999:",500+TMPLOOP)+
                "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+TMPCHR+"<br>'+")
  END

 HTMLVIEWLINE(" '<p><b>Share Groups:</b><br>'+")
 HTMLVIEWLINE(" 'This is where you will enter the information about"+
              " what shares you want to be available and how you want"+
              " them to be '+")
 HTMLVIEWLINE(" 'created. Select one of the 20 groups of shares and"+
              " specify its display name. This can be anything you like"+
              " that describes '+")
 HTMLVIEWLINE(" 'the list of Shares (Savings, Checking, CDs, Premium"+
              " Shares, etc) and click the [+] box to add a new row."+
              " Select a Share '+")
 HTMLVIEWLINE(" 'Type from the drop down. Only Share Types defined in"+
              " Share Defaults AND which have a properly defined '+")
 HTMLVIEWLINE(" 'dividend type will display in the drop down boxes. To"+
              " use the next '+")
 HTMLVIEWLINE(" 'available ID when creating the share leave the Share"+
              " ID Range blank. To limit the available ID range for a"+
              " given Share '+")
 HTMLVIEWLINE(" 'Type enter a list of the ID ranges to be used. Each"+
              " ID must be 4 digits in length and separated by a dash"+
              " (-) for a range '+")
 HTMLVIEWLINE(" 'and/or a comma (,) for a list. If you have extra rows"+
              " you may delete them by clicking the [-] box.</p>'+")
 HTMLVIEWLINE(" '<p>Note: The terms to be displayed for each Share group"+
              " are controlled by letterfiles named BANNO.NEWSUBACCT.TERMS.[2'+")
 HTMLVIEWLINE(" 'Digit Group Num] so group 0 for example would be"+
              " BANNO.NEWSUBACCT.TERMS.00<br>'+")
 HTMLVIEWLINE(" 'HTML tags can be used in the letterfiles</p>';")

 HTMLVIEWLINE("  function initialize(action){")
 HTMLVIEWLINE("    objArr=document.body.getElementsByTagName('a');")
 HTMLVIEWLINE("    for (i=0;i<objArr.length;i++){")
 HTMLVIEWLINE("      objArr[i].attachEvent('onfocus',blurLinks);")
 HTMLVIEWLINE("      objArr[i].href='javascript:void(0);';")
 HTMLVIEWLINE("      objArr[i].tabIndex='-1'; //all anchors at top of page")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    objArr=document.body.getElementsByTagName('input');")
 HTMLVIEWLINE("    for (i=0;i<objArr.length;i++){")
 HTMLVIEWLINE("      objArr[i].attachEvent('onkeypress',catchEnter);")
 HTMLVIEWLINE("      objArr[i].attachEvent('onfocus',changeColor);")
 HTMLVIEWLINE("      objArr[i].attachEvent('onblur',changeColor);")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    objArr=document.body.getElementsByTagName('select');")
 HTMLVIEWLINE("    for (i=0;i<objArr.length;i++){")
 HTMLVIEWLINE("      objArr[i].attachEvent('onkeypress',catchEnter);")
 HTMLVIEWLINE("      if (objArr[i].id.indexOf('shareTypes')>=0 ||")
 HTMLVIEWLINE("          objArr[i].id.indexOf('clubTypes')>=0)")
 HTMLVIEWLINE("        objArr[i].attachEvent('onchange',validateTypes);")
 HTMLVIEWLINE("      if (objArr[i].id.indexOf('clubMatMonth')>=0 ||")
 HTMLVIEWLINE("          objArr[i].id.indexOf('clubMatDay')>=0)")
 HTMLVIEWLINE("        objArr[i].attachEvent('onchange',validateDate);")
 HTMLVIEWLINE("      //if first option is null, then populate list")
 HTMLVIEWLINE("      if (action=='add' && objArr[i].options[0]==null){")
 HTMLVIEWLINE("        //maturity month")
 HTMLVIEWLINE("        if (objArr[i].id.indexOf('clubMatMonth')>=0){")
 HTMLVIEWLINE("          for (j=1;j<=12;j++)")
 HTMLVIEWLINE("            objArr[i].options[j-1]=(j<=9)?new Option('0'+j,")
 HTMLVIEWLINE("                                   '0'+j):new Option(j,j);")
 HTMLVIEWLINE("        //maturity day")
 HTMLVIEWLINE("        }else if (objArr[i].id.indexOf('clubMatDay')>=0){")
 HTMLVIEWLINE("          for (j=1;j<=31;j++)")
 HTMLVIEWLINE("            objArr[i].options[j-1]=(j<=9)?new Option('0'+j,")
 HTMLVIEWLINE("                                   '0'+j):new Option(j,j);")
 HTMLVIEWLINE("        }")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    resetAllStates(); //initializes states of objects")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function validateTypes(){")
 HTMLVIEWLINE("    objCol=document.body.getElementsByTagName('select');")
 HTMLVIEWLINE("    objArr=new Array();")
 HTMLVIEWLINE("    j=-1;")
 HTMLVIEWLINE("    objName=event.srcElement.id.substring(0,"+
                          "event.srcElement.id.indexOf('.'));")
 HTMLVIEWLINE("    for (i=0;i<objCol.length;i++){")
 HTMLVIEWLINE("      if (objCol[i].id.indexOf(objName)>=0){")
 HTMLVIEWLINE("        j++")
 HTMLVIEWLINE("        objArr[j]=objCol[i];")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    objCol=document.body.getElementsByTagName('input');")
 HTMLVIEWLINE("    for (i=0;i<objCol.length;i++){")
 HTMLVIEWLINE("      if (objCol[i].id.indexOf(objName)>=0){")
 HTMLVIEWLINE("        j++;")
 HTMLVIEWLINE("        objArr[j]=objCol[i];")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    objGroupName=event.srcElement.id.substring(0,")
 HTMLVIEWLINE("                 event.srcElement.id.indexOf('.',")
 HTMLVIEWLINE("                 objName.length+1));")
 HTMLVIEWLINE("    for (i=0;i<objArr.length;i++){")
 HTMLVIEWLINE("      if (objArr[i].id!=null){")
 HTMLVIEWLINE("        if (objArr[i].id.indexOf(objName)>=0 &&")
 HTMLVIEWLINE("            event.srcElement.id.indexOf(objName)>=0){")
 HTMLVIEWLINE("          if (objArr[i]!=event.srcElement && ")
 HTMLVIEWLINE("              objArr[i].value==event.srcElement.value &&")
 HTMLVIEWLINE("              event.srcElement.value!='' &&")
 HTMLVIEWLINE("              objArr[i].id.indexOf(objGroupName)>=0){")
 HTMLVIEWLINE("            alert('This type is already defined')")
 HTMLVIEWLINE("            event.srcElement.selectedIndex=-1;")
 HTMLVIEWLINE("            break;")
 HTMLVIEWLINE("          }")
 HTMLVIEWLINE("        }")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function validateDate(){")
 HTMLVIEWLINE("    eventObj=event.srcElement;")
 HTMLVIEWLINE("    dayObj='clubMatDay'+eventObj.id.substring(")
 HTMLVIEWLINE("           eventObj.id.indexOf('.'),eventObj.id.length);")
 HTMLVIEWLINE("    dayObj=document.getElementById(dayObj);")
 HTMLVIEWLINE("    monthObj='clubMatMonth'+eventObj.id.substring(")
 HTMLVIEWLINE("              eventObj.id.indexOf('.'),eventObj.id.length);")
 HTMLVIEWLINE("    monthObj=document.getElementById(monthObj);")
 HTMLVIEWLINE("    switch (monthObj.value){")
 HTMLVIEWLINE("    case '02':")
 HTMLVIEWLINE("      if (dayObj.value>28){")
 HTMLVIEWLINE("        alert('There are only 28 days in this month');")
 HTMLVIEWLINE("        dayObj.selectedIndex=27; //set to last valid day")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("      break;")
 HTMLVIEWLINE("    case '04': case '06': case '09': case '11':")
 HTMLVIEWLINE("      if (dayObj.value>30){")
 HTMLVIEWLINE("        alert('There are only 30 days in this month');")
 HTMLVIEWLINE("        dayObj.selectedIndex=29; //set to last valid day")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("      break;")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function changeColor(){")
 HTMLVIEWLINE("    field=event.srcElement;")
 HTMLVIEWLINE("    if (field.type=='text' || field.type=='password')")
 HTMLVIEWLINE("      field.style.backgroundColor="+
                     "(event.type=='blur')?'':'lightyellow';")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function blurLinks(){")
 HTMLVIEWLINE("    event.srcElement.blur();")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function catchEnter(){")
 HTMLVIEWLINE("    field=event.srcElement;")
 HTMLVIEWLINE("    keyCode=event.keyCode;")

 HTMLVIEWLINE("    if (keyCode==13 &&")
 HTMLVIEWLINE("        event.srcElement.type!='submit' &&")
 HTMLVIEWLINE("        event.srcElement.type!='reset'){")
 HTMLVIEWLINE("      for (i=0; i<field.form.elements.length; i++){")
 HTMLVIEWLINE("        if (field==field.form.elements[i])")
 HTMLVIEWLINE("          break;")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("      i=(i+1)%field.form.elements.length;")
 HTMLVIEWLINE("      j=i")
 HTMLVIEWLINE("      //search for next available open control")
 HTMLVIEWLINE("      while ((field.form.elements[j].disabled ||")
 HTMLVIEWLINE("            field.form.elements[j].style.display=='none' ||")
 HTMLVIEWLINE("            field.form.elements[j].parentElement."+
                           "style.display=='none' ||")
 HTMLVIEWLINE("            field.form.elements[j].parentElement.")
 HTMLVIEWLINE("                                   parentElement."+
                           "style.display=='none' ||")
 HTMLVIEWLINE("            field.form.elements[j].parentElement."+
                           "parentElement.")
 HTMLVIEWLINE("                                   parentElement."+
                           "style.display=='none' ||")
 HTMLVIEWLINE("            field.form.elements[j].parentElement."+
                           "parentElement.")
 HTMLVIEWLINE("                                   parentElement."+
                           "parentElement.style.display=='none' ||")
 HTMLVIEWLINE("            field.form.elements[j].parentElement."+
                           "parentElement.")
 HTMLVIEWLINE("                                   parentElement."+
                           "parentElement.parentElement.")
 HTMLVIEWLINE("                                   parentElement."+
                           "style.display=='none' ||")
 HTMLVIEWLINE("            field.form.elements[j].type=='hidden')&&")
 HTMLVIEWLINE("            j<field.form.elements.length){")
 HTMLVIEWLINE("        j=j+1;")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("      field.form.elements[j].focus();")
 HTMLVIEWLINE("      return false;")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    else")
 HTMLVIEWLINE("      return true;")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function limitEntry(objName,limitType){//limits entry text")
 HTMLVIEWLINE("    e=event.keyCode;")
 HTMLVIEWLINE("    switch (limitType){")
 HTMLVIEWLINE("    case idRange:")
[  HTMLVIEWLINE("      if ((e<48 || e>57) && e!=44 && e!=45)")]
 HTMLVIEWLINE("      if ((e<48 && e!=44 && e!=45)|| e>57)")

 HTMLVIEWLINE("        event.returnValue=false;")
 HTMLVIEWLINE("      break;")
 HTMLVIEWLINE("    case specfile:")
 HTMLVIEWLINE("      if (e==32)")
 HTMLVIEWLINE("        event.returnValue=false;")
 HTMLVIEWLINE("      break")
 HTMLVIEWLINE("    case number:")
 HTMLVIEWLINE("      if (e<48 || e>57)")
 HTMLVIEWLINE("        event.returnValue=false;")
 HTMLVIEWLINE("      break")

 HTMLVIEWLINE("    case limitedNumber:")
 HTMLVIEWLINE("      if (e<48 || e>50)") [allow 0,1 or 2]
 HTMLVIEWLINE("        event.returnValue=false;")
 HTMLVIEWLINE("      break")

 HTMLVIEWLINE("    case currency:")
 HTMLVIEWLINE("      if ((e<48 || e>57) && e!=44 && e!=46)")
 HTMLVIEWLINE("        event.returnValue=false;")
 HTMLVIEWLINE("      break")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function verify(){")
 HTMLVIEWLINE("    if(confirm('Are you sure you want to reset the form?')){")
 HTMLVIEWLINE("      //reset form")
 HTMLVIEWLINE("      document.forms.SAConfig.reset();")
 HTMLVIEWLINE("      //reset vis/disable states")
 HTMLVIEWLINE("      resetAllStates();")
 HTMLVIEWLINE("      return true;")
 HTMLVIEWLINE("    }else")
 HTMLVIEWLINE("      return false;")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  //resets the state of hidden and disabled objects")
 HTMLVIEWLINE("  function resetAllStates(){")
 HTMLVIEWLINE("    toggleGroup(document.getElementById('shrSpan'),")
 HTMLVIEWLINE("                document.getElementById('shrGrp'));")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function showHelp(content){")
 HTMLVIEWLINE("    helpObj=window.open('','helpName','height=300,"+
                                       "width=500,scrollbars=yes');")
 HTMLVIEWLINE("    helpObj.document.write('<title>Help</title>"+
                                          "<body></body>');")
 HTMLVIEWLINE("    bodyObj=helpObj.document.body;")
 HTMLVIEWLINE("    bodyObj.style.backgroundColor='lightyellow';")
 HTMLVIEWLINE("    bodyObj.style.font='8pt Verdana';")
 HTMLVIEWLINE("    bodyObj.innerHTML=content;")
 HTMLVIEWLINE("    bodyObj.innerHTML+='<p style=\'text-align:center;\'>'+")
 HTMLVIEWLINE("                       '<a id=\'cls\' href=\'javascript:"+
                                      "void\' '+")
 HTMLVIEWLINE("                       'onClick=\'self.close();\' "+
                                      "title=\'Close '+")
 HTMLVIEWLINE("                       'Help\'>[Close]</a></p>';")
 HTMLVIEWLINE("    helpObj.document.getElementById('cls').style."+
                                                         "color='blue' ;")
 HTMLVIEWLINE("    helpObj.focus(); //force display")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function toggleGroup(src,obj){ //shows or hides groups")
 HTMLVIEWLINE("    if (event.srcElement){ //change state when not loading")
 HTMLVIEWLINE("      if(event.srcElement.id) //if element has ID")
 HTMLVIEWLINE("        obj.style.display=(obj.style.display=='block')"+
                                                    "?'none':'block';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    src.title=(obj.style.display=='block')?'Click to "+
                                        "Collapse':'Click to Expand';")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function toggleVis(objCheck01,objName){")
 HTMLVIEWLINE("    objName.style.display=(objCheck01.checked==true)"+
                                                    "?'none':'block';")
 HTMLVIEWLINE("    if (objName==clubTbl)")
 HTMLVIEWLINE("      clubTblAll.style.display=(objCheck01.checked==false)"+
                                                         "?'none':'block';")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function toggleEnable(objCheck01,objName,objCheck02){")
 HTMLVIEWLINE("    if (objName.id=='cardFMSpecfile'){")
 HTMLVIEWLINE("     objName.disabled=(objCheck01.checked==false &&"+
                                     "objCheck02.checked==false)?true:false;")
 HTMLVIEWLINE("    }else if (objCheck02){ //checks third param "+
                                           "for double checkbox")
 HTMLVIEWLINE("      objCheck02.disabled=!objCheck01.checked;")
 HTMLVIEWLINE("      objName.disabled=(objCheck01.checked==true)?"+
                                      "objCheck02.checked:true;")
 HTMLVIEWLINE("    }else if (objCheck01.id=='appID'){")
 HTMLVIEWLINE("      objName.disabled=(objCheck01.value.length==4)"+
                                                      "?false:true;")
 HTMLVIEWLINE("      document.getElementById('equifax').disabled="+
                             "(objCheck01.value.length==4)?false:true;")
 HTMLVIEWLINE("      document.getElementById('experian').disabled="+
                             "(objCheck01.value.length==4)?false:true;")
 HTMLVIEWLINE("      document.getElementById('transunion').disabled="+
                             "(objCheck01.value.length==4)?false:true;")
 HTMLVIEWLINE("    }else //added or to check for select box too")
 HTMLVIEWLINE("      objName.disabled=(objCheck01.checked==false)?"+
                                                       "false:true;")
 HTMLVIEWLINE("    objName.style.backgroundColor="+
                                 "(objName.disabled)?'#D5D0C8':'';")
 HTMLVIEWLINE("    if (objCheck02 && objCheck02.type=='text')")
 HTMLVIEWLINE("        objCheck02.style.backgroundColor="+
                     "(objCheck02.disabled)?'#D5D0C8':'';")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function toggleEnableGrp(objName,count){")
 HTMLVIEWLINE("    enableState=!objName.checked;")
 HTMLVIEWLINE("    objForm=objName.form;")
 HTMLVIEWLINE("    for (currIndex=0;i<objForm.elements.length ;currIndex++ ){")
 HTMLVIEWLINE("      if (objName==objForm.elements[currIndex])")
 HTMLVIEWLINE("        break;")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    for (i=currIndex+1;i<currIndex+count;i++){")
 HTMLVIEWLINE("      objForm.elements[i].disabled=enableState;")
 HTMLVIEWLINE("      if (objForm.elements[i].type!='checkbox')")
 HTMLVIEWLINE("        objForm.elements[i].style.backgroundColor="+
                               "(objForm.elements[i].disabled)?'#D5D0C8':'';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function addRows(obj,group){")
 HTMLVIEWLINE("    shareMax="+FORMAT("##9",SHAREMAX)+";")
 HTMLVIEWLINE("    objRow=obj.parentElement.parentElement;")
 HTMLVIEWLINE("    currentRow=objRow.rowIndex;")
 HTMLVIEWLINE("    objTable=objRow.parentElement;")
 HTMLVIEWLINE("    newRowID=objTable.rows.length+1;")
 HTMLVIEWLINE("    if(objTable.rows.length-1>=shareMax){")
 HTMLVIEWLINE("      alert('There are no more shares defined in defaults');")
 HTMLVIEWLINE("      return false;")
 HTMLVIEWLINE("    }")

 HTMLVIEWLINE("    tempHTML='';")
 HTMLVIEWLINE("    objRow=objTable.insertRow(currentRow+1);")
 HTMLVIEWLINE("    objRow.className='grp';")

 HTMLVIEWLINE("    objCell=objRow.insertCell();")
 HTMLVIEWLINE("    objCell.className='lbl';")
 HTMLVIEWLINE("    tempHTML='SH type: <select id=shareTypes.'+group+'.'+")
 HTMLVIEWLINE("             newRowID+'>'")
 FOR I=0 TO SHAREMAX
  DO
   HTMLVIEWLINE("    tempHTML+='<option value=\'"+
                SHARETYPES(I)+"\'>"+SHARETYPES(I)+"</option>';")
  END
 HTMLVIEWLINE("    tempHTML+='</select>';")
 HTMLVIEWLINE("    objCell.innerHTML=tempHTML;")
 HTMLVIEWLINE("    document.getElementById('shareTypes."+
                           "'+group+'.'+newRowID).selectedIndex=-1;")
 HTMLVIEWLINE("    objCell=objRow.insertCell();")
 HTMLVIEWLINE("    objCell.innerHTML='ID Range:&nbsp;<input class=\"+
              "'width500\' id=\'shareIDs.'+")
 HTMLVIEWLINE("                       group+'.'+newRowID+")
 HTMLVIEWLINE("                      '\' type=\'text\' size=\'50\' '+")
 HTMLVIEWLINE("                      'onKeyPress=\'limitEntry("+
                                             "this,idRange)\' />';")
 HTMLVIEWLINE("    initialize('add');")
 
 HTMLVIEWLINE("    objCell=objRow.insertCell();")
 HTMLVIEWLINE("    objCell.innerHTML='Create Max:&nbsp;<input class=\"+
              "'width100\' id=\'maxShares.'+")
 HTMLVIEWLINE("                       group+'.'+newRowID+")
 HTMLVIEWLINE("                      '\' type=\'text\' maxLength=\'2\' '+")
 HTMLVIEWLINE("                      'onKeyPress=\'limitEntry("+
                                             "this,number)\' />';")
 HTMLVIEWLINE("    initialize('add');")

 HTMLVIEWLINE("    objCell=objRow.insertCell();")
 HTMLVIEWLINE("    objCell.className='plsMin';")
 HTMLVIEWLINE("    objCell.width='50';")
 HTMLVIEWLINE("    objCell.innerHTML=' <a title=\'Insert Row\' "+
                                     "onClick=\'addRows(this,'+"+
                                     "group+');\'>'+")
 HTMLVIEWLINE("                      '[+]</a><a title=\'Delete "+
                               "Row\' onClick=\'delRows(this);\'>[-]</a>';")
 HTMLVIEWLINE("    initialize('add');")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function delRows(obj){")
 HTMLVIEWLINE("    objRow=obj.parentElement.parentElement;")
 HTMLVIEWLINE("    objTable=objRow.parentElement;")
 HTMLVIEWLINE("    currentRow=objRow.rowIndex;")
 HTMLVIEWLINE("      objTable.deleteRow(currentRow);")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function processSubmit(formObj){")
 HTMLVIEWLINE("    if (validate(formObj)){")
 HTMLVIEWLINE("      //copy id prop to name prop for specfile parsing")
 HTMLVIEWLINE("      for (i=0;i<formObj.elements.length;i++){")
 HTMLVIEWLINE("        formObj.elements[i].name=formObj.elements[i].id;")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("      //stores section states")
 HTMLVIEWLINE("      stateObj=document.getElementById('configStates');")
 HTMLVIEWLINE("      stateObj.value=shrGrp.style.display+',';")
 HTMLVIEWLINE("    }else")
 HTMLVIEWLINE("      return false;")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function validate(formObj){")
 HTMLVIEWLINE("    //id & type ranges")
 HTMLVIEWLINE("    pattern=/^\d{4}((,|\-)\d{4})*$/;")
 HTMLVIEWLINE("    for (i=0;i<formObj.elements.length;i++){")
 HTMLVIEWLINE("      if (formObj.elements[i].value!=''){")
 HTMLVIEWLINE("        if ((formObj.elements[i].id.substring(0,8)"+
                           "=='shareIDs' ||")
 HTMLVIEWLINE("            formObj.elements[i].id=='odShareTypes' ||")
 HTMLVIEWLINE("            formObj.elements[i].id=='odLOCTypes' ||")
 HTMLVIEWLINE("            formObj.elements[i].id=='odDraftTypes') &&")
 HTMLVIEWLINE("           !pattern.test(formObj.elements[i].value)){")
 HTMLVIEWLINE("          alert('Please enter all ID and type ranges "+
                               "using 4 digits'+")
 HTMLVIEWLINE("                '\nseperated by commas and/or dashes."+
                               " \n\n(Ex: 0000-0005,0010)');")
 HTMLVIEWLINE("          formObj.elements[i].select();")
 HTMLVIEWLINE("          return false;")
 HTMLVIEWLINE("        }else if((formObj.elements[i].id=='appID' ||")
 HTMLVIEWLINE("                  formObj.elements[i].id=='appType') &&")
 HTMLVIEWLINE("                  formObj.elements[i].value.length!=0 &&")
 HTMLVIEWLINE("                  formObj.elements[i].value.length!=4){")
 HTMLVIEWLINE("           alert('Application ID and Type must both be"+
                                " 4 digits in length');")
 HTMLVIEWLINE("           formObj.elements[i].select();")
 HTMLVIEWLINE("           return false;")
 HTMLVIEWLINE("        }")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    return true;")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("  function moveItem(dir,objSel){")
 HTMLVIEWLINE("    if (objSel.selectedIndex==-1)")
 HTMLVIEWLINE("      alert('Please select a specfile name to move');")
 HTMLVIEWLINE("    else{")
 HTMLVIEWLINE("      newIndex=objSel.selectedIndex+dir;")
 HTMLVIEWLINE("      if (newIndex>=0 && newIndex<objSel.options.length){")
 HTMLVIEWLINE("        selIndex=objSel.selectedIndex;")
 HTMLVIEWLINE("        oldVal=objSel.options[selIndex].value;")
 HTMLVIEWLINE("        oldText=objSel.options[selIndex].text;")
 HTMLVIEWLINE("        objSel.options[selIndex].value=objSel."+
                                               "options[newIndex].value;")
 HTMLVIEWLINE("        objSel.options[selIndex].text=objSel."+
                                               "options[newIndex].text;")
 HTMLVIEWLINE("        objSel.options[newIndex].value=oldVal;")
 HTMLVIEWLINE("        objSel.options[newIndex].text=oldText;")
 HTMLVIEWLINE("        objSel.selectedIndex=newIndex;")
 HTMLVIEWLINE("      }")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("  }")

[* If the 'require funding' option is selected, display the 'Minimum Funding Amount' input
*]
 HTMLVIEWLINE("  function toggleMinFundingAmt(){")
 HTMLVIEWLINE("    if(document.getElementById('requireFundingFlag').checked==true){ ")
 HTMLVIEWLINE("      document.getElementById('minFundingAmtTR').style.display='';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    else{")
 HTMLVIEWLINE("      document.getElementById('minFundingAmtTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('minFundingAmt').value='';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("  }")

[* If the 'Allow name record addition' option is selected, AND the 'Copy
** existing names: Share' option is selected, then display an input text
** line for the copy Share name types.
*]
 HTMLVIEWLINE("  function toggleShareNameTypes(){")
 HTMLVIEWLINE("    if(document.getElementById('NameCopyShareFlag').checked==true){ ")
 HTMLVIEWLINE("      document.getElementById('nameCopyShareTypesTR').style.display='';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    else{")
 HTMLVIEWLINE("      document.getElementById('NameCopyShareTypesTR').style.display='none';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("  }")

[* If the 'Allow name record addition' option is selected, AND the 'Copy
** existing names: Loan' option is selected, then display an input text
** line for the copy Loan name types.
*]
 HTMLVIEWLINE("  function toggleLoanNameTypes(){")
 HTMLVIEWLINE("    if(document.getElementById('NameCopyLoanFlag').checked==true){ ")
 HTMLVIEWLINE("      document.getElementById('nameCopyLoanTypesTR').style.display='';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    else{")
 HTMLVIEWLINE("      document.getElementById('NameCopyLoanTypesTR').style.display='none';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("  }")

[* If the 'Test Mode' option is selected, then display an input text
** line for the test accounts list.
*]
 HTMLVIEWLINE("  function toggleTestModeAccountList(){")
 HTMLVIEWLINE("    if(document.getElementById('testModeFlag').checked==true){ ")
 HTMLVIEWLINE("      document.getElementById('testModeAccountListTR').style.display='';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    else{")
 HTMLVIEWLINE("      document.getElementById('testModeAccountListTR').style.display='none';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("  }")

[* If the 'allow names' flag is checked, display the related input fields
*]
 HTMLVIEWLINE("  function toggleMaxNewNames(){")
 HTMLVIEWLINE("    if(document.getElementById('allowNamesFlag').checked==true){ ")
 HTMLVIEWLINE("      document.getElementById('maxNewNames').value='1';")
 HTMLVIEWLINE("      document.getElementById('maxNewNamesTR').style.display='';")
 HTMLVIEWLINE("      document.getElementById('nameLevelTR').style.display='';")
 HTMLVIEWLINE("      document.getElementById('safeNameTypesTR').style.display='';")
 HTMLVIEWLINE("      document.getElementById('unsafeNameTypesTR').style.display='';")
 HTMLVIEWLINE("      document.getElementById('nameTrackingTypeTR').style.display='';")
 HTMLVIEWLINE("      document.getElementById('copyExistingNamesTR').style.display='';")
 HTMLVIEWLINE("      document.getElementById('nameCopyShareTR').style.display='';")
 HTMLVIEWLINE("    if(document.getElementById('nameCopyShareFlag').checked==true){ ")
 HTMLVIEWLINE("      document.getElementById('nameCopyShareTypesTR').style.display='';")
 HTMLVIEWLINE("    }") 
 HTMLVIEWLINE("      document.getElementById('nameCopyLoanTR').style.display='';")
 HTMLVIEWLINE("    if(document.getElementById('nameCopyLoanFlag').checked==true){ ")
 HTMLVIEWLINE("      document.getElementById('nameCopyLoanTypesTR').style.display='';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("      document.getElementById('creatingNewNamesTR').style.display='';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("    else{")
 HTMLVIEWLINE("      document.getElementById('maxNewNamesTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('nameLevelTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('safeNameTypesTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('unsafeNameTypesTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('nameTrackingTypeTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('copyExistingNamesTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('nameCopyShareTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('nameCopyShareTypesTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('nameCopyLoanTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('nameCopyLoanTypesTR').style.display='none';")
 HTMLVIEWLINE("      document.getElementById('creatingNewNamesTR').style.display='none';")
 HTMLVIEWLINE("    }")
 HTMLVIEWLINE("  }")

 HTMLVIEWLINE("//--></script><style type='text/CSS'><!--")
 HTMLVIEWLINE("  body,td   {font: 9pt Verdana;}")
 HTMLVIEWLINE("  select,")
 HTMLVIEWLINE("  textarea,")
 HTMLVIEWLINE("  input     {font: 10pt Courier New;}")
 HTMLVIEWLINE("  span      {float:left;cursor:hand}")
 HTMLVIEWLINE("  .btn      {font: 10pt Arial}")
 HTMLVIEWLINE("  .lbl      {text-align:right;}")
 HTMLVIEWLINE("   width50  {width:50;}")
 HTMLVIEWLINE("  .width100 {width:100;}")
 HTMLVIEWLINE("  .width200 {width:200;}")
 HTMLVIEWLINE("  .width300 {width:300;}")
 HTMLVIEWLINE("  .width400 {width:400;}")
 HTMLVIEWLINE("  .width500 {width:500;}")
 HTMLVIEWLINE("  .width600 {width:600;}")
 HTMLVIEWLINE("  .width700 {width:700;}")
 HTMLVIEWLINE("  .width800 {width:800;}")
 HTMLVIEWLINE("  .hdg      {background-color:#B1B3CB; "+
                           "font-weight:bold; text-align:right;}")
 HTMLVIEWLINE("  .grp      {background-color:#DDDDDD;}")
 HTMLVIEWLINE("  .ttl      {background-color:#BBBBBB;}")
 HTMLVIEWLINE("  a:link    {color:#000000; text-decoration:none;}")
 HTMLVIEWLINE("  a:visited {color:#000000; text-decoration:none;}")
 HTMLVIEWLINE("  a:active  {color:#FF0000; text-decoration:none;}")
 HTMLVIEWLINE("  a:hover   {color:#FF0000; text-decoration:none; "+
                           "cursor:help;}")
 HTMLVIEWLINE("  .plsMin           {font: 10pt Courier New; "+
                           "font-weight:bold; text-decoration:none;}")
 HTMLVIEWLINE("  .plsMin a:link    {color:#000000;}")
 HTMLVIEWLINE("  .plsMin a:visited {color:#000000;}")
 HTMLVIEWLINE("  .plsMin a:active  {color:#666666;}")
 HTMLVIEWLINE("  .plsMin a:hover   {color:#666666; "+
                                   "text-decoration:none; cursor:hand;}")
 HTMLVIEWLINE("  .arrows   {font-size:24pt;position:relative;top:-8}")
 HTMLVIEWLINE("  .disc     {color:#FF0000; font-size:8pt;}")
 HTMLVIEWLINE("--></style></head><body onLoad='initialize();'>")

 HTMLVIEWLINE("<form id='SAConfig' onSubmit='return processSubmit(this);' "+
              "method='post' action='symitar://HTMLView~Action=Post'>")

 HTMLVIEWLINE("<table width='1000' cellpadding='0' "+
              "cellspacing='0' align='center'>")
 HTMLVIEWLINE("<tr>")
 HTMLVIEWLINE("<td class='lbl' style='font-weight:bold;'>"+
   "BANNO.NEWSUBCREATE.V1.CONFIG &nbsp;&nbsp;"+CONFIGPROGRAMVER)
 HTMLVIEWLINE("</td></tr>")
 HTMLVIEWLINE("<tr><td colspan='100%'>")
 HTMLVIEWLINE("<table width='100%' cellspacing='0' "+
              "cellpadding='0' bgcolor='#000000'>")
 HTMLVIEWLINE("<tr><td>")
 HTMLVIEWLINE("<table width='100%' cellpadding='3' cellspacing='1'>")
 HTMLVIEWLINE("<tr><td class='hdg'><span id='shrSpan' "+
              "onClick='toggleGroup(this,shrGrp);'>:: Share Creation</span>")
 HTMLVIEWLINE("<a title='Share Help' "+
  "onClick='showHelp(helpText[0]);'>[?]</a>")
 HTMLVIEWLINE("</td></tr>")
 HTMLVIEWLINE("<tr id='shrGrp' style='display:"+STATES(0)+";'>")
 HTMLVIEWLINE("<td class='grp'>")

 HTMLVIEWLINE("<table width='100%' cellspacing='2'"+
              " cellpadding='0'>")

 IF DEBUGMODE=DEBUGMODEON THEN
  DO
  [Display DEBUGMODE warning]
   HTMLVIEWLINE("<tr><td colspan='100%' style='color:red; text-align:center'>")
   HTMLVIEWLINE("<b><i>PROGRAM IS CURRENTLY RUNNING IN DEBUG MODE</br>"+
                "LETTERSPECS USED FOR CFG DATAFILE</i></b></td></tr>")
  END

 CALL BLANKTR
 CALL BLANKTR

[* The test error code will allow you to force various errors for testing
** the programming of the main PowerOn program. This option only presents when
** debug mode is turned on. Be sure to reinstall this configuration program
** for demand use and then rerun it at least one time, saving the setup results
** to insure the test mode flag is removed from the configuration data file.
*]

 IF DEBUGMODE=DEBUGMODEON THEN
  DO
   HTMLVIEWLINE("<tr >")
   HTMLVIEWLINE("<td class='lbl width300'>")
   HTMLVIEWLINE("TEST ERROR CODE:</td><td>")
   HTMLVIEWLINE("<input id='testErrorCode' ")
   HTMLVIEWLINE(" type='text' class='width100' value='"+FORMAT("999",TESTERRORCODE)+"' ")
   HTMLVIEWLINE("/></td></tr>")
   CALL BLANKTR
  END

[Display SAC config options]
 HTMLVIEWLINE("<tr><td class='lbl width300'>")
 HTMLVIEWLINE("Account warnings to exclude:</td><td >")
 HTMLVIEWLINE("<input id='warnings' class='width600' type='text' maxlength='130' value='"+
  SACEXCLUDEWARNINGLIST+"' ")
 HTMLVIEWLINE(" onKeyPress='limitEntry(this,idRange)' ")
 HTMLVIEWLINE("/></td></tr>")

 HTMLVIEWLINE("<tr><td class='lbl width300'>")
 HTMLVIEWLINE("Account types to exclude:</td><td>")
 HTMLVIEWLINE("<input id='acctTypes' class='width600' type='text' maxlength='130' value='"+
  SACEXCLUDEACCTTYPELIST+"' ")
 HTMLVIEWLINE(" onKeyPress='limitEntry(this,idRange)' ")
 HTMLVIEWLINE("/></td></tr>")

 CALL BLANKTR

 HTMLVIEWLINE("<tr><td class='lbl width300'>")
 HTMLVIEWLINE("Require funding:</td><td>")
 HTMLVIEWLINE("<input id='requireFundingFlag' type='checkbox'")
 IF VALUE(SACFUNDREQUIREFLAG)>0 THEN
  HTMLVIEWLINE(" checked")
 HTMLVIEWLINE(" onClick='toggleMinFundingAmt()'")
 HTMLVIEWLINE("/></td></tr>")

 IF MONEY(VALUE(SACFUNDMINAMT))<=$0.00 THEN
  SACFUNDMINAMT=""
 TMPCHR=FORMAT("###,##9.99",MONEY(VALUE(SACFUNDMINAMT)))
 WHILE LENGTH(TMPCHR)>0 AND
       SEGMENT(TMPCHR,1,1)=" "
  DO
   TMPCHR=SEGMENT(TMPCHR,2,LENGTH(TMPCHR))
  END
 SACFUNDMINAMT=TMPCHR

 HTMLVIEWLINE("<tr id='minFundingAmtTR'")
 IF VALUE(SACFUNDREQUIREFLAG)=0 THEN
  HTMLVIEWLINE("style='display:none'")
 HTMLVIEWLINE(" onKeyPress='limitEntry(this,currency)'>")

 HTMLVIEWLINE("<td class='lbl width300'>")
 HTMLVIEWLINE("Minimum funding amt:</td><td>")
 HTMLVIEWLINE("<input id='minFundingAmt' type='text' size='10' ")
 HTMLVIEWLINE ("maxLength='10' ")
 HTMLVIEWLINE("value="+QUOTE+SACFUNDMINAMT+QUOTE+" ")
 HTMLVIEWLINE(" style="+QUOTE+"text-align:right"+QUOTE+" ")
 HTMLVIEWLINE("onClick="+QUOTE+"this.select()"+QUOTE+" />")
 HTMLVIEWLINE("&nbsp;&nbsp;<i>enter as '###,##9.99'. "+
              "Must be greater than $0.00.</i></td></tr>")

 CALL BLANKTR

 HTMLVIEWLINE("<tr><td class='lbl width300'>")
 HTMLVIEWLINE("Allow name record addition:</td><td>")
 HTMLVIEWLINE("<input id='allowNamesFlag' type='checkbox'")
 IF VALUE(SACNAMEALLOWFLAG)>0 OR
    SACNAMEMAXNEW>0 THEN
  HTMLVIEWLINE(" checked")
 HTMLVIEWLINE(" onClick='toggleMaxNewNames()'")
 HTMLVIEWLINE("/></td></tr>")

 HTMLVIEWLINE("<tr id='copyExistingNamesTR' ")
 IF VALUE(SACNAMEALLOWFLAG)=0 THEN
  HTMLVIEWLINE("style='display:none'")
 HTMLVIEWLINE(">")
 HTMLVIEWLINE("<td class='lbl width300'>")
 HTMLVIEWLINE("<b>Copying existing names</b>&nbsp;</td><td>&nbsp;</td></tr>")

 HTMLVIEWLINE("<tr id='nameCopyShareTR' ")
 IF VALUE(SACNAMEALLOWFLAG)=0 THEN
  HTMLVIEWLINE("style='display:none'")
 HTMLVIEWLINE(">")
 HTMLVIEWLINE("<td class='lbl width300'>")
 HTMLVIEWLINE("Share names:</td><td >")
 HTMLVIEWLINE("<input id='nameCopyShareFlag' type='checkbox'")
 IF VALUE(SACNAMECOPYSHAREFLAG)>0 THEN
  HTMLVIEWLINE(" checked")
 HTMLVIEWLINE(" onClick='toggleShareNameTypes()'")
 HTMLVIEWLINE("/></td></tr>")

 HTMLVIEWLINE("<tr id='nameCopyShareTypesTR'")
 IF VALUE(SACNAMECOPYSHAREFLAG)=0 THEN
  HTMLVIEWLINE(" style='display:none' ")
 HTMLVIEWLINE(">")

 HTMLVIEWLINE("<td class='lbl width300'>Valid Share name types:</td>")
 HTMLVIEWLINE("<td>")
 HTMLVIEWLINE("<input id='nameCopyShareTypes' class='width300' type='text' value='"+
  SACNAMECOPYSHARETYPES+"' ")
 HTMLVIEWLINE(" onKeyPress='limitEntry(this,idRange)' />")
 HTMLVIEWLINE("</td></tr>")

 HTMLVIEWLINE("<tr id='nameCopyLoanTR' ")
 IF VALUE(SACNAMEALLOWFLAG)=0 THEN
  HTMLVIEWLINE("style='display:none'")
 HTMLVIEWLINE(">")
 HTMLVIEWLINE("<td class='lbl width300'>")
 HTMLVIEWLINE("Loan names:</td><td >")
 HTMLVIEWLINE("<input id='nameCopyLoanFlag' type='checkbox'")
 IF VALUE(SACNAMECOPYLOANFLAG)>0 THEN
  HTMLVIEWLINE(" checked")
 HTMLVIEWLINE(" onClick='toggleLoanNameTypes()'")
 HTMLVIEWLINE("/></td></tr>")

 HTMLVIEWLINE("<tr id='nameCopyLoanTypesTR'")
 IF VALUE(SACNAMECOPYLOANFLAG)=0 THEN
  HTMLVIEWLINE(" style='display:none' ")
 HTMLVIEWLINE(">")

 HTMLVIEWLINE("<td class='lbl width300'>Valid Loan name types:</td>")
 HTMLVIEWLINE("<td>")
 HTMLVIEWLINE("<input id='nameCopyLoanTypes' class='width300' type='text' value='"+
  SACNAMECOPYLOANTYPES+"' ")
 HTMLVIEWLINE(" onKeyPress='limitEntry(this,idRange)' />")
 HTMLVIEWLINE("</td></tr>")

 HTMLVIEWLINE("<tr id='creatingNewNamesTR' ")
 IF VALUE(SACNAMEALLOWFLAG)=0 THEN
  HTMLVIEWLINE("style='display:none'")
 HTMLVIEWLINE(">")
 HTMLVIEWLINE("<td class='lbl width300'>")
 HTMLVIEWLINE("<b>Creating new names</b>&nbsp;</td><td>&nbsp;</td></tr>")

 HTMLVIEWLINE("<tr id='nameLevelTR' ")
 IF VALUE(SACNAMEALLOWFLAG)=0 AND
    SACNAMEMAXNEW=0 THEN
  HTMLVIEWLINE("style='display:none'")
  HTMLVIEWLINE(">")
 HTMLVIEWLINE("<td class='lbl width300'>")
 HTMLVIEWLINE("Name level:</td><td>")
 HTMLVIEWLINE("<select id='nameLevel'>")
 HTMLVIEWLINE("<option value='0'")
 IF SACNAMELEVEL=0 THEN
  HTMLVIEWLINE(" selected='selected'")
  HTMLVIEWLINE(">Account</option>")
 HTMLVIEWLINE("<option value='1'")
 IF SACNAMELEVEL=1 THEN
  HTMLVIEWLINE(" selected='selected'")
  HTMLVIEWLINE(">Share</option>")
 HTMLVIEWLINE("</select>")
 HTMLVIEWLINE("</td></tr>")

 HTMLVIEWLINE("<tr id='maxNewNamesTR'")
 IF VALUE(SACNAMEALLOWFLAG)=0 AND
    SACNAMEMAXNEW=0 THEN
  HTMLVIEWLINE("style='display:none'")
 HTMLVIEWLINE(" onKeyPress='limitEntry(this,limitedNumber)'>")
 HTMLVIEWLINE("<td class='lbl width300'>")
 HTMLVIEWLINE("Number of new names allowed:</td><td>")

 IF VALUE(SACNAMEALLOWFLAG)>0 THEN
  DO
   IF SACNAMEMAXNEW<0 THEN
    SACNAMEMAXNEW=0
   ELSE IF SACNAMEMAXNEW>2 THEN
    SACNAMEMAXNEW=2
  END

 HTMLVIEWLINE("<input id='maxNewNames' type='text' size='4' maxLength='1'")
 HTMLVIEWLINE("value='"+FORMAT("9",SACNAMEMAXNEW)+"' />")
 HTMLVIEWLINE("&nbsp;&nbsp;<i>Maximum names allowed: 2</i></td></tr>")

 HTMLVIEWLINE("<tr id='safeNameTypesTR' ")
 IF VALUE(SACNAMEALLOWFLAG)=0 AND
    SACNAMEMAXNEW=0 THEN
  HTMLVIEWLINE("style='display:none'")
 HTMLVIEWLINE("><td class='lbl width300'>")
 HTMLVIEWLINE("Safe name types:</td><td>")
 HTMLVIEWLINE("<input id='nameTypeSafeList' type='text'  class='width300' value='"+
  SACNAMETYPESAFE+"' ")
 HTMLVIEWLINE(" onKeyPress='limitEntry(this,idRange)' ")
 HTMLVIEWLINE("/></td></tr>")

 HTMLVIEWLINE("<tr id='unsafeNameTypesTR' ")
 IF VALUE(SACNAMEALLOWFLAG)=0 AND
    SACNAMEMAXNEW=0 THEN
  HTMLVIEWLINE("style='display:none'")
  HTMLVIEWLINE("><td class='lbl width300'>")
 HTMLVIEWLINE("Unsafe name types:</td><td>")
 HTMLVIEWLINE("<input id='nameTypeUnsafeList' ")
 HTMLVIEWLINE(" type='text' class='width300' value='"+SACNAMETYPEUNSAFE+"' ")
 HTMLVIEWLINE(" onKeyPress='limitEntry(this,idRange)' ")
 HTMLVIEWLINE("/></td></tr>")

 HTMLVIEWLINE("<tr id='nameTrackingTypeTR' ")
 IF VALUE(SACNAMEALLOWFLAG)=0 AND
    SACNAMEMAXNEW=0 THEN
  HTMLVIEWLINE("style='display:none'")
 HTMLVIEWLINE(">")
 HTMLVIEWLINE("<td class='lbl width300'>")
 HTMLVIEWLINE("Unsafe name tracking type:</td><td>")
 HTMLVIEWLINE("<input id='nameTrackingType' type='text' size='4' maxLength='2'")
 HTMLVIEWLINE("value='"+FORMAT("99",SACNAMETRACKING)+"' ")
 HTMLVIEWLINE(" onKeyPress='limitEntry(this,number)'  />")
 HTMLVIEWLINE("&nbsp;&nbsp;<i>tracking type must be between 30 and 99</i></td></tr>")
 HTMLVIEWLINE("</td></tr>")

 CALL BLANKTR

 HTMLVIEWLINE("<tr><td class='lbl width300'>")
 HTMLVIEWLINE("Display rates:</td><td>")
 HTMLVIEWLINE("<input id='setDisplayRatesFlag' type='checkbox'")
 IF VALUE(SACDISPLAYRATEFLAG)>0 THEN
  HTMLVIEWLINE(" checked")
 HTMLVIEWLINE("/></td></tr>")

 HTMLVIEWLINE("<tr><td class='lbl width300'>")
 HTMLVIEWLINE("Set share div rate for fill-ins:</td><td>")
 HTMLVIEWLINE("<input id='setFillInRatesFlag' type='checkbox'")
 IF VALUE(SACSETFILLINRATESFLAG)>0 THEN
  HTMLVIEWLINE(" checked")
 HTMLVIEWLINE("/></td></tr>")

 CALL BLANKTR

 HTMLVIEWLINE("<tr id='testModeFlagTR' ")
 HTMLVIEWLINE(">")
 HTMLVIEWLINE("<td class='lbl width300'>")
 HTMLVIEWLINE("Test mode:</td><td >")
 HTMLVIEWLINE("<input id='testModeFlag' type='checkbox'")
 IF VALUE(SACTESTMODEFLAG)>0 THEN
  HTMLVIEWLINE(" checked")
 HTMLVIEWLINE(" onClick='toggleTestModeAccountList()'")
 HTMLVIEWLINE("/></td></tr>")

 HTMLVIEWLINE("<tr id='testModeAccountListTR'")
 IF VALUE(SACTESTMODEFLAG)=0 THEN
  HTMLVIEWLINE(" style='display:none' ")
 HTMLVIEWLINE(">")

 HTMLVIEWLINE("<td class='lbl width300'>Test accounts list:</td>")
 HTMLVIEWLINE("<td>")
 HTMLVIEWLINE("<input id='testModeAccountList' class='width600' type='text' value='"+
  SACTESTMODEACCOUNTLIST+"' ")
 HTMLVIEWLINE("/>")
 HTMLVIEWLINE("</td></tr>")

 CALL BLANKTR

 HTMLVIEWLINE("<td class='lbl width300'>CU Staff Email Address</td>")
 HTMLVIEWLINE("<td>")
 HTMLVIEWLINE("<input id='cuStaffEmailAddress' class='width400' type='text' value='"+
  SACCUSTAFFEMAILADDRESS+"' ")
 HTMLVIEWLINE("/>")
 HTMLVIEWLINE("</td></tr>")
 HTMLVIEWLINE("<td class='lbl width300'>CU Staff Email Subject</td>")
 HTMLVIEWLINE("<td>")
 HTMLVIEWLINE("<input id='cuStaffEmailSubject' class='width400' type='text' value='"+
  SACCUSTAFFEMAILSUBJECT+"' ")
 HTMLVIEWLINE("/>")
 HTMLVIEWLINE("</td></tr>")

 CALL BLANKTR

 HTMLVIEWLINE("<tr>")
 HTMLVIEWLINE("<td class='lbl width300'>")
 HTMLVIEWLINE("<b>Error display messages</b>&nbsp;</td>")
 HTMLVIEWLINE("<td>&nbsp;</td></tr>")

 FOR TMPLOOP=0 TO MAXERRORCODE
  DO
   TMPCHR=SACERRORCODECHR(TMPLOOP)
   IF TMPCHR="" THEN
    TMPCHR=SACERRORCODEDEFAULTCHR(TMPLOOP)
   HTMLVIEWLINE("<tr id='"+FORMAT("errorDescrTR99",TMPLOOP)+"'><td class='lbl width300'>")
   HTMLVIEWLINE(FORMAT("Error condition 999",TMPLOOP+500)+"</td><td>")

   HTMLVIEWLINE("<input id='"+FORMAT("errorCodeCHR999",TMPLOOP+500)+"' type='text' "+
                "class='width500' maxlength='60'")
   HTMLVIEWLINE("value='"+TMPCHR+"'>")
   HTMLVIEWLINE("</td></tr>")
  END

 CALL BLANKTR

 HTMLVIEWLINE("<tr><td colspan='2' bgcolor='#000000' "+
              "id='shareTbl"+FORMAT("9",I)+"' style='display:block;'>")

 HTMLVIEWLINE("<table width='100%' height='100%' cellspacing='1' "+
              "cellpadding='2'>")

 HTMLVIEWLINE("<tr class='ttl'>")
 HTMLVIEWLINE("<td width='125'>")
 HTMLVIEWLINE("Share Type</td><td>Share ID Range</td></tr>")

 HTMLVIEWLINE("</table>")
 HTMLVIEWLINE("</td></tr>")

[* Section to display form input for share groups / types
*]
 FOR I=0 TO SACSHARETYPEGROUPSMAX
  DO
   HTMLVIEWLINE("<tr><td colspan='2' bgcolor='#000000' "+
                "id='shareTbl"+FORMAT("9",I)+"' style='display:block;'>")

   HTMLVIEWLINE("<table width='100%' height='100%' cellspacing='1' "+
                "cellpadding='2'>")

   HTMLVIEWLINE("<tr class='ttl'><td colspan='2'>")
   HTMLVIEWLINE("Share Group "+FORMAT("99",I)+" Display Name: ")
   HTMLVIEWLINE("<input id='groupName."+FORMAT("99",I)+"' type='text'"+
                "size='30' maxlength='40' value='"+
                SACSHARETYPEGROUPNAMES(I)+"'/>")
   HTMLVIEWLINE("</td><td class='width100-'></td><td class='plsMin width50'>")
   HTMLVIEWLINE("<a title='Insert Row' "+
                "onClick='addRows(this,"+CTRLCHR(34)+FORMAT("99",I)+
                CTRLCHR(34)+")'>[+]</a>")
   HTMLVIEWLINE("</td></tr>")
   J=0
   WHILE SACSHARETYPES(I,J)<>"" AND J<SACSHARETYPESMAX
    DO
     HTMLVIEWLINE("<tr class='grp'><td width='125' class='lbl' style='text-align:right'>")
     HTMLVIEWLINE("SH type:&nbsp;&nbsp;"+SEGMENT(SACSHARETYPES(I,J),1,4)+
                  "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type='hidden' id='shareTypes."+
                  FORMAT("99",I)+"."+FORMAT("999",J)+"' value='"+
                  SEGMENT(SACSHARETYPES(I,J),1,4)+"' /></td>")

     TMPCHR=SEGMENT(SACSHARETYPES(I,J),6,LENGTH(SACSHARETYPES(I,J)))
     COLONPOS=CHARACTERSEARCH(TMPCHR,":")
     IF COLONPOS=0 THEN
      DO
       MAXSHARESCHR=""
       IDRANGECHR=TMPCHR
      END
     ELSE
      DO
       IDRANGECHR=SEGMENT(TMPCHR,1,COLONPOS-1)
       MAXSHARESCHR=SEGMENT(TMPCHR,COLONPOS+1,LENGTH(TMPCHR))
      END

     HTMLVIEWLINE("<td>")
     HTMLVIEWLINE("ID Range:&nbsp;<input class='width500' id='shareIDs."+FORMAT("99",I)+"."+
                   FORMAT("999",J)+"' type='text' maxlength='80' ")
     HTMLVIEWLINE("onKeyPress='limitEntry(this,idRange)' value='")
     HTMLVIEWLINE(IDRANGECHR+"' />")
     HTMLVIEWLINE("<td>")
     HTMLVIEWLINE("Max Shares:&nbsp;<input class='width100' id='maxShares."+FORMAT("99",I)+"."+
                   FORMAT("999",J)+"' type='text' maxlength='2' ")
     HTMLVIEWLINE("onKeyPress='limitEntry(this,number)' value='")
     HTMLVIEWLINE(MAXSHARESCHR+"' />")
     HTMLVIEWLINE("<td class='plsMin width50'>")
     HTMLVIEWLINE("<a title='Insert Row' "+
                  "onClick='addRows(this,"+CTRLCHR(34)+FORMAT("99",I)+
                  CTRLCHR(34)+")'>[+]</a><a title='Delete Row' "+
                  "onClick='delRows(this)'>[-]</a></td></tr>")
     J=J+1
    END [WHILE SACSHARETYPES(I,J)<>"" AND J<SACSHARETYPESMAX]

   HTMLVIEWLINE("</table></td></tr>")
  END [FOR I=0 TO SACSHARETYPEGROUPSMAX]

 HTMLVIEWLINE("</table>")
 HTMLVIEWLINE("</td></tr></table>")
 HTMLVIEWLINE("</td></tr>")
 HTMLVIEWLINE("</table></td></tr>")
 HTMLVIEWLINE("<input type='hidden' id='configStates' value='' />")
 HTMLVIEWLINE("<tr><td colspan='100%' align='right'><br>"+
              "<input type='submit' class='btn' value=' Submit ' />")
 HTMLVIEWLINE("<input type='reset' class='btn' onClick='window.location.reload()'"+
              "/></td></tr>")
 HTMLVIEWLINE("</table>")

 HTMLVIEWLINE("</form></body>")

 CALL DISPLAYVALIDATIONERRORS
 HTMLVIEWDISPLAY
END [PROCEDURE]

PROCEDURE INIT
[* Build a list of valid (open) share types
*]
 Q=CTRLCHR(34)
 QUOTE=CTRLCHR(34)
 IF DEBUGMODE=DEBUGMODEON THEN
  DATAFILETYPE="LETTER"
 ELSE
  DATAFILETYPE="DATA"

 IDLENGTH=4 [Always use 4 for config purposes]
 
 SHAREMAX=0
 WHILELIMIT=20000
 FOR I=0 TO 9999
  DO
   IF SHAREMAX<249 AND
      GETDATADATE(GETDEFAULTSHARE,I,7)='--/--/--' AND [CLOSEDATE]
      GETDATANUMBER(GETPARAMDIVDEFDEFINEDCODE,GETDATANUMBER(GETDEFAULTSHARE,I,19))=TRUE THEN [DIVIDEND DEFINED CODE]
    DO
     SHAREMAX=SHAREMAX+1
     SHARETYPES(SHAREMAX)=FORMAT("9999",I)
    END
  END
 CALL LOADNTSUBACCTCONFIG
END [PROCEDURE]

PROCEDURE PARSEHTML
[* Load form output into an array then loop through the
** array to obtain user input.
*]
  CALL CLEARVARIABLES
  I=0
  WHILE PARSEARRAY(I)<>"EOD" AND I<999
   DO
    I=I+1
    PARSEARRAY(I)=ENTERLINE(0)
   END
  PARSEARRAYMAX=I

  J=0
  FOR I=0 TO PARSEARRAYMAX
   DO
    TEMPNUM=0
    TEMPNUM2=0
    IF CHARACTERSEARCH(PARSEARRAY(I),"=")>0 THEN
     DO
      TEMPCHAR=UPPERCASE(SEGMENT(PARSEARRAY(I),1,
               CHARACTERSEARCH(PARSEARRAY(I),"=")-1))
      TEMPLINE=SEGMENT(PARSEARRAY(I),
               CHARACTERSEARCH(PARSEARRAY(I),"=")+1,LENGTH(PARSEARRAY(I)))

      IF TEMPCHAR="WARNINGS" THEN
       SACEXCLUDEWARNINGLIST=TEMPLINE
      IF TEMPCHAR="ACCTTYPES" THEN
       SACEXCLUDEACCTTYPELIST=TEMPLINE
      IF TEMPCHAR="MAXNEWNAMES" THEN
       SACNAMEMAXNEW=VALUE(TEMPLINE)
      IF TEMPCHAR="SETDISPLAYRATESFLAG" THEN
       IF UPPERCASE(TEMPLINE)="ON" THEN
        SACDISPLAYRATEFLAG="1"
      IF TEMPCHAR="SETFILLINRATESFLAG" THEN
       IF UPPERCASE(TEMPLINE)="ON" THEN
        SACSETFILLINRATESFLAG="1"
      IF TEMPCHAR="TESTMODEFLAG" THEN
       IF UPPERCASE(TEMPLINE)="ON" THEN
        SACTESTMODEFLAG="1"
      IF TEMPCHAR="TESTMODEACCOUNTLIST" THEN
       SACTESTMODEACCOUNTLIST=TEMPLINE
      IF TEMPCHAR="CUSTAFFEMAILADDRESS" THEN
       SACCUSTAFFEMAILADDRESS=TEMPLINE
      IF TEMPCHAR="CUSTAFFEMAILSUBJECT" THEN
       SACCUSTAFFEMAILSUBJECT=TEMPLINE
      IF TEMPCHAR="REQUIREFUNDINGFLAG" THEN
       IF UPPERCASE(TEMPLINE)="ON" THEN
        SACFUNDREQUIREFLAG="1"
      IF TEMPCHAR="MINFUNDINGAMT" THEN
       SACFUNDMINAMT=TEMPLINE
      IF TEMPCHAR="ALLOWNAMESFLAG" THEN
       IF UPPERCASE(TEMPLINE)="ON" THEN
        SACNAMEALLOWFLAG="1"
      IF TEMPCHAR="NAMELEVEL" THEN
       SACNAMELEVEL=VALUE(TEMPLINE)
      IF TEMPCHAR="NAMETRACKINGTYPE" THEN
       SACNAMETRACKING=VALUE(TEMPLINE)
      IF TEMPCHAR="NAMETYPESAFELIST" THEN
       SACNAMETYPESAFE=TEMPLINE
      IF TEMPCHAR="NAMETYPEUNSAFELIST" THEN
       SACNAMETYPEUNSAFE=TEMPLINE
      IF TEMPCHAR="NAMECOPYSHAREFLAG" THEN
       IF UPPERCASE(TEMPLINE)="ON" THEN
        SACNAMECOPYSHAREFLAG="1"
      IF TEMPCHAR="NAMECOPYSHARETYPES" THEN
        SACNAMECOPYSHARETYPES=TEMPLINE
      IF TEMPCHAR="NAMECOPYLOANFLAG" THEN
       IF UPPERCASE(TEMPLINE)="ON" THEN
        SACNAMECOPYLOANFLAG="1"
      IF TEMPCHAR="NAMECOPYLOANTYPES" THEN
        SACNAMECOPYLOANTYPES=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR500" THEN
       SACERRORCODECHR(0)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR501" THEN
       SACERRORCODECHR(1)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR502" THEN
       SACERRORCODECHR(2)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR503" THEN
       SACERRORCODECHR(3)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR504" THEN
       SACERRORCODECHR(4)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR505" THEN
       SACERRORCODECHR(5)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR506" THEN
       SACERRORCODECHR(6)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR507" THEN
       SACERRORCODECHR(7)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR508" THEN
       SACERRORCODECHR(8)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR509" THEN
       SACERRORCODECHR(9)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR510" THEN
       SACERRORCODECHR(10)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR511" THEN
       SACERRORCODECHR(11)=TEMPLINE
      IF TEMPCHAR="ERRORCODECHR512" THEN
       SACERRORCODECHR(12)=TEMPLINE
      IF TEMPCHAR="TESTERRORCODE" THEN
       TESTERRORCODE=VALUE(TEMPLINE)

[* Share groups - formatted as 'groupName.xx'
*]
      IF CHARACTERSEARCH(TEMPCHAR,"GROUPNAME.")>0 THEN
       DO
        TEMPNUM=VALUE(SEGMENT(TEMPCHAR,
                LENGTH(TEMPCHAR)-1,LENGTH(TEMPCHAR)))
        IF TEMPNUM>=0 AND TEMPNUM<=SACSHARETYPEGROUPSMAX AND
           TEMPLINE<>"" THEN
          SACSHARETYPEGROUPNAMES(TEMPNUM)=TEMPLINE
       END
[* Share Types - formatted as 'shareTypes.xx.yyy'
*]
      IF CHARACTERSEARCH(TEMPCHAR,"SHARETYPES.")>0 THEN
       DO
        TEMPCHAR=SEGMENT(TEMPCHAR,
                CHARACTERSEARCH(TEMPCHAR,".")+1,LENGTH(TEMPCHAR))
        TEMPNUM=VALUE(SEGMENT(TEMPCHAR,1,
                CHARACTERSEARCH(TEMPCHAR,".")-1))
        TEMPNUM2=VALUE(SEGMENT(TEMPCHAR,
                CHARACTERSEARCH(TEMPCHAR,".")+1,LENGTH(TEMPCHAR)))
        IF TEMPNUM>=0 AND TEMPNUM<=SACSHARETYPEGROUPSMAX AND
           TEMPNUM2>=0 AND TEMPNUM2<=SACSHARETYPESMAX AND
           TEMPLINE<>"" THEN
          SACSHARETYPES(TEMPNUM,TEMPNUM2)=TEMPLINE
       END
[* Max Shares - formatted as 'maxShares.xx.yyy'
*]
      IF CHARACTERSEARCH(TEMPCHAR,"MAXSHARES.")>0 THEN
       DO
        TEMPCHAR=SEGMENT(TEMPCHAR,
                CHARACTERSEARCH(TEMPCHAR,".")+1,LENGTH(TEMPCHAR))
        TEMPNUM=VALUE(SEGMENT(TEMPCHAR,1,
                CHARACTERSEARCH(TEMPCHAR,".")-1))
        TEMPNUM2=VALUE(SEGMENT(TEMPCHAR,
                 CHARACTERSEARCH(TEMPCHAR,".")+1,LENGTH(TEMPCHAR)))
        IF TEMPNUM>=0 AND TEMPNUM<=SACSHARETYPEGROUPSMAX AND
           TEMPNUM2>=0 AND TEMPNUM2<=SACSHARETYPESMAX AND
           TEMPLINE<>"" THEN
          SACSHARETYPES(TEMPNUM,TEMPNUM2)=SACSHARETYPES(TEMPNUM,TEMPNUM2)+":"+
                                          TEMPLINE
       END
[* Share IDs - formatted as 'shareIDs.xx.yyy'
*]
      IF CHARACTERSEARCH(TEMPCHAR,"SHAREIDS.")>0 THEN
       DO
        TEMPCHAR=SEGMENT(TEMPCHAR,
                CHARACTERSEARCH(TEMPCHAR,".")+1,LENGTH(TEMPCHAR))
        TEMPNUM=VALUE(SEGMENT(TEMPCHAR,1,
                CHARACTERSEARCH(TEMPCHAR,".")-1))
        TEMPNUM2=VALUE(SEGMENT(TEMPCHAR,
                 CHARACTERSEARCH(TEMPCHAR,".")+1,LENGTH(TEMPCHAR)))
        IF TEMPNUM>=0 AND TEMPNUM<=SACSHARETYPEGROUPSMAX AND
           TEMPNUM2>=0 AND TEMPNUM2<=SACSHARETYPESMAX AND
           TEMPLINE<>"" THEN
          SACSHARETYPES(TEMPNUM,TEMPNUM2)=SACSHARETYPES(TEMPNUM,TEMPNUM2)+":"+
                                          TEMPLINE
       END
     
     END
   END [FOR I=0 TO PARSEARRAYMAX]

[* Make adjustments to some values based upon corresponding parameter settings
*]
 IF SACNAMETYPEUNSAFE="" THEN
  SACNAMETRACKING=0
  
 IF SACNAMEALLOWFLAG="0" THEN
  DO
   SACNAMEMAXNEW=0
   SACNAMETRACKING=0
   SACNAMETYPESAFE=""
   SACNAMETYPEUNSAFE=""
   SACNAMECOPYSHARETYPES=""
   SACNAMECOPYLOANTYPES=""
   SACNAMECOPYSHAREFLAG="0"
   SACNAMECOPYLOANFLAG="0"
  END

 IF SACNAMECOPYSHAREFLAG="0" THEN
  SACNAMECOPYSHARETYPES=""
 IF SACNAMECOPYLOANFLAG="0" THEN
  SACNAMECOPYLOANTYPES=""
 IF SACTESTMODEFLAG="0" THEN
  SACTESTMODEACCOUNTLIST=""

END [PROCEDURE]

PROCEDURE WRITEFILE
[* Write output to Data file.
*]
 FILEDELETE(DATAFILETYPE,NTSUBACCTCONFIGDATAFILE,FILEERROR)
 FILEOPEN(DATAFILETYPE,NTSUBACCTCONFIGDATAFILE,"WRITE",FILENUMBER,FILEERROR)

 FILEWRITELINE(FILENUMBER,"["+REPEATCHR("#",60),FILEERROR)
 FILEWRITELINE(FILENUMBER," "+NTSUBACCTCONFIGDATAFILE,FILEERROR)
 FILEWRITELINE(FILENUMBER,"",FILEERROR)
 FILEWRITELINE(FILENUMBER," This file is used for configuration of the",FILEERROR)
 FILEWRITELINE(FILENUMBER," BANNO.NEWSUBCREATE.V1.POW program",FILEERROR)
 FILEWRITELINE(FILENUMBER,"",FILEERROR)
 FILEWRITELINE(FILENUMBER," This file is created & updated by using the ",FILEERROR)
 FILEWRITELINE(FILENUMBER," on-demand program: BANNO.NEWSUBCREATE.V1.CONFIG",FILEERROR)
 FILEWRITELINE(FILENUMBER,"",FILEERROR)
 FILEWRITELINE(FILENUMBER," ** DO NOT UPDATE THIS FILE MANUALLY!! **",FILEERROR)
 FILEWRITELINE(FILENUMBER,"",FILEERROR)
 FILEWRITELINE(FILENUMBER,"["+REPEATCHR("#",60),FILEERROR)
 FILEWRITELINE(FILENUMBER,"",FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!CONFIGPROGRAMVER",FILEERROR)
 FILEWRITELINE(FILENUMBER,CONFIGPROGRAMVER,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!WARNINGS",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACEXCLUDEWARNINGLIST,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!ACCTTYPES",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACEXCLUDEACCTTYPELIST,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!MAXNEWNAMES",FILEERROR)
 FILEWRITELINE(FILENUMBER,FORMAT("99",SACNAMEMAXNEW),FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!DISPLAYRATESFLAG",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACDISPLAYRATEFLAG,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!SETFILLINRATESFLAG",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACSETFILLINRATESFLAG,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!REQUIREFUNDINGFLAG",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACFUNDREQUIREFLAG,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!MINFUNDINGAMT",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACFUNDMINAMT,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!ALLOWNAMESFLAG",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACNAMEALLOWFLAG,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!NAMELEVEL",FILEERROR)
 FILEWRITELINE(FILENUMBER,FORMAT("99",SACNAMELEVEL),FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!NAMETRACKINGTYPE",FILEERROR)
 FILEWRITELINE(FILENUMBER,FORMAT("99",SACNAMETRACKING),FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!NAMETYPESAFE",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACNAMETYPESAFE,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!NAMETYPEUNSAFE",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACNAMETYPEUNSAFE,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!NAMECOPYSHAREFLAG",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACNAMECOPYSHAREFLAG,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!NAMECOPYSHARETYPES",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACNAMECOPYSHARETYPES,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!NAMECOPYLOANFLAG",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACNAMECOPYLOANFLAG,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!NAMECOPYLOANTYPES",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACNAMECOPYLOANTYPES,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!SACTESTMODEFLAG",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACTESTMODEFLAG,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!SACTESTMODEACCOUNTLIST",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACTESTMODEACCOUNTLIST,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!SACCUSTAFFEMAILADDRESS",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACCUSTAFFEMAILADDRESS,FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!SACCUSTAFFEMAILSUBJECT",FILEERROR)
 FILEWRITELINE(FILENUMBER,SACCUSTAFFEMAILSUBJECT,FILEERROR)

 FOR TMPLOOP=0 TO MAXERRORCODE
  DO
   FILEWRITELINE(FILENUMBER,"#!"+FORMAT("ERRORCODECHR999",500+TMPLOOP),FILEERROR)
   FILEWRITELINE(FILENUMBER,SACERRORCODECHR(TMPLOOP),FILEERROR)
  END

 FOR I=0 TO SACSHARETYPEGROUPSMAX
  DO
   TEMPNUM=FALSE
   FILEWRITELINE(FILENUMBER,"#!SHARE TYPES"+FORMAT("99",I)+":"+
                 SACSHARETYPEGROUPNAMES(I),FILEERROR)
   FOR J=0 TO SACSHARETYPESMAX
    DO
     IF SACSHARETYPES(I,J)<>"" THEN
      DO
       FILEWRITELINE(FILENUMBER,SACSHARETYPES(I,J),FILEERROR)
       TEMPNUM=TRUE
      END
    END
    IF TEMPNUM=FALSE THEN
     FILEWRITELINE(FILENUMBER,"",FILEERROR)
  END

 FILEWRITELINE(FILENUMBER,"#!TESTERRORCODE",FILEERROR)
 FILEWRITELINE(FILENUMBER,FORMAT("999",TESTERRORCODE),FILEERROR)

 FILEWRITELINE(FILENUMBER,"#!End of File",FILEERROR)
 FILEWRITELINE(FILENUMBER,"",FILEERROR)
 FILECLOSE(FILENUMBER,FILEERROR)

 POPUPMESSAGE(0,NTSUBACCTCONFIGDATAFILE+" Data File Successfully Updated")
END [PROCEDURE]

PROCEDURE CREATETOCLETTERFILES
[* Create terms or conditions Letter files for each used group if the files
** don't already exist
*]
 TOCFILECREATED=FALSE

 FOR GROUPLOOP=0 TO SACSHARETYPEGROUPSMAX
  DO
   TOCOPENRESULTS(GROUPLOOP)=FALSE
   IF SACSHARETYPEGROUPNAMES(GROUPLOOP)<>"" THEN
    DO
     TMPCHR=FORMAT("BANNO.NEWSUBACCT.TERMS.99",GROUPLOOP)
[* Attempt to open file to write. Fails if file already exists
*]
     FILEOPEN("LETTER",TMPCHR,"WRITE",FILENUMBER,FILEERROR)
     IF FILEERROR="" THEN
      DO
       FILEWRITELINE(FILENUMBER,"**********************************************************************"+
                                "**************************************************",FILEERROR)
       FILEWRITELINE(FILENUMBER,"* BANNO.NEWSUBCREATE.V1.POW Terms or Conditions (TOC) Letter file ",FILEERROR)
       FILEWRITELINE(FILENUMBER,"*",FILEERROR)
       FILEWRITELINE(FILENUMBER,"* One of these Terms and Conditions Letter files is required for"+
                                " each share group defined by the",FILEERROR)
       FILEWRITELINE(FILENUMBER,"* BANNO.NEWSUBCREATE.V1.CONFIG on-demand program.",FILEERROR)
       FILEWRITELINE(FILENUMBER,"*",FILEERROR)
       FILEWRITELINE(FILENUMBER,"* Each line started by an asterisk in this Letter file will be"+
                                " treated as a comment and ignored by the program",FILEERROR)
       FILEWRITELINE(FILENUMBER,"*",FILEERROR)
       FILEWRITELINE(FILENUMBER,"* Data will be displayed as written. The following HTML tags may"+
                                " be utilized to facilitate text formatting:",FILEERROR)
       FILEWRITELINE(FILENUMBER,"*   <h1>, <h2>, <h3>, <h4>, <h5>, <h6>, <b>, <strong>, <i>, <u>,"+
                                " <ul>, <ol>, <li>, <br>, <p>, <a> and <hr>.",FILEERROR)
       FILEWRITELINE(FILENUMBER,"* Avoid the use of special characters in your message.",FILEERROR)
       FILEWRITELINE(FILENUMBER,"*",FILEERROR)
       FILEWRITELINE(FILENUMBER,"* For backwards compatibility, a single blank line will be"+
                                " interpreted as a new line and two blank lines in a row",FILEERROR)
       FILEWRITELINE(FILENUMBER,"* will be interpreted as a new paragraph",FILEERROR)
       FILEWRITELINE(FILENUMBER,"*",FILEERROR)
       FILEWRITELINE(FILENUMBER,"* Use this ruler as a guideline when setting up your messages."+
                                " Do not extend past the end of this line (120 characters).",FILEERROR)
       FILEWRITELINE(FILENUMBER,"*",FILEERROR)
       FILEWRITELINE(FILENUMBER,"*        10        20        30        40        50        60        7"+
                                "0        80        90        100       110       120",FILEERROR)
       FILEWRITELINE(FILENUMBER,"*234567890123456789012345678901234567890123456789012345678901234567890"+
                                "12345678901234567890123456789012345678901234567890",FILEERROR)
       FILEWRITELINE(FILENUMBER,"*--------|---------|---------|---------|---------|---------|---------|"+
                                "---------|---------|---------|---------|---------|",FILEERROR)
       FILEWRITELINE(FILENUMBER,"<h3>Savings Shares</h3>",FILEERROR)
       FILEWRITELINE(FILENUMBER,"<ul>",FILEERROR)
       FILEWRITELINE(FILENUMBER,"<li>Condition 1</li>",FILEERROR)
       FILEWRITELINE(FILENUMBER,"<li>Condition 2</li>",FILEERROR)
       FILEWRITELINE(FILENUMBER,"</ul>",FILEERROR)
       FILEWRITELINE(FILENUMBER,"<br>",FILEERROR)
       FILEWRITELINE(FILENUMBER,"Refer to <a href='https://www.w3schools.com'>W3Schools.com</a>"+
                                " for assistance and tips with using HTML tags<br>",FILEERROR)
       FILEWRITELINE(FILENUMBER,"",FILEERROR)       IF FILEERROR="" THEN
        DO
         TOCFILECREATED=TRUE
         TOCOPENRESULTS(GROUPLOOP)=TRUE
        END
       FILECLOSE(FILENUMBER,FILEERROR)
      END
    END
  END 

 IF TOCFILECREATED=TRUE THEN
  POPUPMESSAGE(0,"Required TOC Letterfiles "+CTRLCHR(34)+"BANNO.NEWSUBACCT.TERMS.xx"+CTRLCHR(34)+
                 " have been created, please update them as needed.")
END [PROCEDURE]

PROCEDURE CLEARVARIABLES
[*This procedure will clear the variables storing the configuration data
** for reuse. This is necessary to avoid any erroneous data being written
** back to the file that may have been changed
*]
 FOR I=0 TO SACSHARETYPEGROUPSMAX
  DO
   SACSHARETYPEGROUPNAMES(I)=""
   FOR J=0 TO SACSHARETYPESMAX
    DO
     SACSHARETYPES(I,J)=""
    END
  END

 SACEXCLUDEWARNINGLIST=""
 SACEXCLUDEACCTTYPELIST=""
 SACFUNDREQUIREFLAG="0"
 SACFUNDMINAMT=""
 SACNAMEALLOWFLAG="0"
 SACNAMEMAXNEW=0
 SACSETFILLINRATESFLAG="0"
 SACNAMELEVEL=0
 SACNAMETYPESAFE=""
 SACNAMETYPEUNSAFE=""
 SACNAMETRACKING=0
 SACDISPLAYRATEFLAG="0"
 SACNAMECOPYSHAREFLAG="0"
 SACNAMECOPYLOANFLAG="0"
 SACNAMECOPYSHARETYPES=""
 SACNAMECOPYLOANTYPES=""
 SACTESTMODEFLAG="0"
 SACTESTMODEACCOUNTLIST=""
 SACCUSTAFFEMAILADDRESS=""
 SACCUSTAFFEMAILSUBJECT=""
 TESTERRORCODE=0
END [PROCEDURE]

PROCEDURE VALIDATEINPUT
[* Validate various aspects of the user input; setting VALIDINPUT
** to FALSE if any issues are found. Store error descriptions
** into an array for later display.
*]
 VALIDINPUT=TRUE
 VALIDATIONERRORCOUNT=0
 FOR TMPLOOP=1 TO VALIDATIONERRORMAX
  DO
   VALIDATIONERRORLIST(TMPLOOP)=""
  END
 CALL VALIDATIONERRORSETUP

 IF VALUE(SACNAMEALLOWFLAG)>0 AND
    SACNAMETYPESAFE="" AND
    SACNAMETYPEUNSAFE="" AND
    SACNAMECOPYSHAREFLAG="0" AND
    SACNAMECOPYLOANFLAG="0" THEN
  DO
   VALIDATIONERRORCODE=1
   CALL VALIDATIONERRORADD
  END

 IF SACFUNDREQUIREFLAG="1" AND
    MONEY(VALUE(SACFUNDMINAMT))<=$0.00 THEN
  DO
   VALIDATIONERRORCODE=2
   CALL VALIDATIONERRORADD
  END

 IF VALUE(SACNAMEALLOWFLAG)>0 AND
    SACNAMETYPEUNSAFE<>"" AND
   (SACNAMETRACKING<30 OR
    SACNAMETRACKING>99) THEN
  DO
   VALIDATIONERRORCODE=3
   CALL VALIDATIONERRORADD
  END

 IF (VALUE(SACNAMECOPYSHAREFLAG)>0 AND
     SACNAMECOPYSHARETYPES="") OR
    (VALUE(SACNAMECOPYLOANFLAG)>0 AND
     SACNAMECOPYLOANTYPES="") THEN
  DO
   VALIDATIONERRORCODE=4
   CALL VALIDATIONERRORADD
  END

 IF VALUE(SACTESTMODEFLAG)>0 AND
    LENGTH(SACTESTMODEACCOUNTLIST)<10 THEN
  DO
   VALIDATIONERRORCODE=5
   CALL VALIDATIONERRORADD
  END
 
 IF VALIDATIONERRORCOUNT>0 THEN
  VALIDINPUT=FALSE
END [PROCEDURE]

PROCEDURE DISPLAYVALIDATIONERRORS
[* If there were any input validation errors found, display them
** in the form of JavaScript user alerts
*]
 IF VALIDATIONERRORCOUNT>0 THEN
  DO
   HTMLVIEWLINE("<script language='JavaScript'><!--")
   FOR TMPLOOP=1 TO VALIDATIONERRORCOUNT
    DO
     HTMLVIEWLINE(" alert('"+VALIDATIONERRORLIST(TMPLOOP)+"');")
    END
   HTMLVIEWLINE("--></script>")
  END
END [PROCEDURE]

PROCEDURE VALIDATIONERRORSETUP
[* Error code character descriptions
*]
 VALIDATIONERRORCHR(1)="If \'Allow name record addition\' is checked - "+
                       "\'Safe\',\'Unsafe\' & \'Copy existing names\' entries cannot all be blank."
 VALIDATIONERRORCHR(2)="If \'Require funding\' is checked the \'Minimum Funding "+
                       "Amount\' must be greater than $0.00."
 VALIDATIONERRORCHR(3)="Unsafe name record tracking type must be between 30 and 99"

 VALIDATIONERRORCHR(4)="When \'Copying existing names\' you must have at least one valid "+
                       "name type listed for each name record checked."
 VALIDATIONERRORCHR(5)="When \'Test mode\' is checked you must have at least one "+
                       "account number in the \'Test accounts list\'"
 VALIDATIONERRORCHR(6)="undefined error"
 VALIDATIONERRORCHR(7)="undefined error"
 VALIDATIONERRORCHR(8)="undefined error"
 VALIDATIONERRORCHR(9)="undefined error"
END [PROCEDURE]

PROCEDURE VALIDATIONERRORADD
[* Add an error code description to the array for display
*]
 IF VALIDATIONERRORCODE>0 AND
    VALIDATIONERRORCOUNT<VALIDATIONERRORMAX THEN
  DO
   VALIDATIONERRORCOUNT=VALIDATIONERRORCOUNT+1
   VALIDATIONERRORLIST(VALIDATIONERRORCOUNT)=VALIDATIONERRORCHR(VALIDATIONERRORCODE)
  END
END [PROCEDURE]

PROCEDURE LOADNTSUBACCTCONFIG
[* Open data file and read in current parameters
*]
 WHILELIMIT=100000
 SACDONE=FALSE

 FILEOPEN(DATAFILETYPE,NTSUBACCTCONFIGDATAFILE,"READ",SACFILENUM,SACFILEERROR)
 WHILE SACFILEERROR="" AND SACDONE=FALSE
  DO
   FILEREADLINE(SACFILENUM,SACLINE,SACFILEERROR)
   IF SACFILEERROR="" THEN
    DO
     IF CHARACTERSEARCH(UPPERCASE(SACLINE),"END OF FILE")>0 THEN
      SACDONE=TRUE
     ELSE IF CHARACTERSEARCH(SACLINE,"#!")>0 THEN
      DO
       SACLINEPREV=SACLINE
       FILEREADLINE(SACFILENUM,SACLINE,SACFILEERROR)
       IF SACFILEERROR="" THEN
        DO
[  If next line does NOT have #! in it.
]
         IF CHARACTERSEARCH(SACLINE,"#!")=0 THEN
          DO
           IF CHARACTERSEARCH(SACLINEPREV,"WARNINGS")>0 THEN
            SACEXCLUDEWARNINGLIST=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ACCTTYPES")>0 THEN
            SACEXCLUDEACCTTYPELIST=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"MAXNEWNAMES")>0 THEN
            SACNAMEMAXNEW=VALUE(SACLINE)
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"DISPLAYRATESFLAG")>0 THEN
            SACDISPLAYRATEFLAG=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"SETFILLINRATESFLAG")>0 THEN
            SACSETFILLINRATESFLAG=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"REQUIREFUNDINGFLAG")>0 THEN
            SACFUNDREQUIREFLAG=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"MINFUNDINGAMT")>0 THEN
            SACFUNDMINAMT=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ALLOWNAMESFLAG")>0 THEN
            SACNAMEALLOWFLAG=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"NAMELEVEL")>0 THEN
            SACNAMELEVEL=VALUE(SACLINE)
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"NAMETRACKINGTYPE")>0 THEN
            SACNAMETRACKING=VALUE(SACLINE)
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"NAMETYPESAFE")>0 THEN
            SACNAMETYPESAFE=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"NAMETYPEUNSAFE")>0 THEN
            SACNAMETYPEUNSAFE=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"NAMECOPYSHAREFLAG")>0 THEN
            SACNAMECOPYSHAREFLAG=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"NAMECOPYSHARETYPES")>0 THEN
            SACNAMECOPYSHARETYPES=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"NAMECOPYLOANFLAG")>0 THEN
            SACNAMECOPYLOANFLAG=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"NAMECOPYLOANTYPES")>0 THEN
            SACNAMECOPYLOANTYPES=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"TESTMODEFLAG")>0 THEN
            SACTESTMODEFLAG=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"TESTMODEACCOUNTLIST")>0 THEN
            SACTESTMODEACCOUNTLIST=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"CUSTAFFEMAILADDRESS")>0 THEN
            SACCUSTAFFEMAILADDRESS=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"CUSTAFFEMAILSUBJECT")>0 THEN
            SACCUSTAFFEMAILSUBJECT=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR500")>0 THEN
            SACERRORCODECHR(0)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR501")>0 THEN
            SACERRORCODECHR(1)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR502")>0 THEN
            SACERRORCODECHR(2)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR503")>0 THEN
            SACERRORCODECHR(3)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR504")>0 THEN
            SACERRORCODECHR(4)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR505")>0 THEN
            SACERRORCODECHR(5)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR506")>0 THEN
            SACERRORCODECHR(6)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR507")>0 THEN
            SACERRORCODECHR(7)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR508")>0 THEN
            SACERRORCODECHR(8)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR509")>0 THEN
            SACERRORCODECHR(9)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR510")>0 THEN
            SACERRORCODECHR(10)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR511")>0 THEN
            SACERRORCODECHR(11)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"ERRORCODECHR512")>0 THEN
            SACERRORCODECHR(12)=SACLINE
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"TESTERRORCODE")>0 THEN
            TESTERRORCODE=VALUE(SACLINE)
           ELSE IF CHARACTERSEARCH(SACLINEPREV,"SHARE TYPES")>0 THEN
            DO
             SACSHARETYPEGROUP=VALUE(SEGMENT(SACLINEPREV, 12,
                               CHARACTERSEARCH(SACLINEPREV,":")-1))
             SACSHARETYPEGROUPNAMES(SACSHARETYPEGROUP)=
              SEGMENT(SACLINEPREV,CHARACTERSEARCH(SACLINEPREV,":")+1,
               LENGTH(SACLINEPREV))
             IF SACSHARETYPEGROUP > -1 AND
                SACSHARETYPEGROUP <= SACSHARETYPEGROUPSMAX THEN
              DO
               SACI=0
               WHILELIMIT=20000
               WHILE CHARACTERSEARCH(SACLINE,"#!")=0
                DO
                 IF SACI<=SACSHARETYPESMAX AND SACLINE<>"" THEN
                  DO
                   SACSHARETYPES(SACSHARETYPEGROUP,SACI)=SACLINE
                   SACI=SACI+1
                  END
                 FILEGETPOS(SACFILENUM,SACFILEPOS,SACFILEERROR)
                 FILEREADLINE(SACFILENUM,SACLINE,SACFILEERROR)
                 IF CHARACTERSEARCH(SACLINE,"#!")>0 THEN
                  FILESETPOS(SACFILENUM,SACFILEPOS,SACFILEERROR)
                END
              END
            END
          END
        END
      END
    END
  END
 FILECLOSE(SACFILENUM,SACFILEERROR)
END [PROCEDURE]

PROCEDURE BLANKTR
[* Prints a blank table row to output
*]
 HTMLVIEWLINE("<tr><td colspan='100%'>&nbsp;</td></tr>")
END